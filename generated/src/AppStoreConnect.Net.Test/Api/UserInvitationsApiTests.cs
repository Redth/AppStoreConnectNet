/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing UserInvitationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserInvitationsApiTests : IDisposable
    {
        private UserInvitationsApi instance;

        public UserInvitationsApiTests()
        {
            instance = new UserInvitationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserInvitationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' UserInvitationsApi
            //Assert.IsType<UserInvitationsApi>(instance);
        }

        /// <summary>
        /// Test UserInvitationsCreateInstance
        /// </summary>
        [Fact]
        public void UserInvitationsCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserInvitationCreateRequest userInvitationCreateRequest = null;
            //var response = instance.UserInvitationsCreateInstance(userInvitationCreateRequest);
            //Assert.IsType<UserInvitationResponse>(response);
        }

        /// <summary>
        /// Test UserInvitationsDeleteInstance
        /// </summary>
        [Fact]
        public void UserInvitationsDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.UserInvitationsDeleteInstance(id);
        }

        /// <summary>
        /// Test UserInvitationsGetCollection
        /// </summary>
        [Fact]
        public void UserInvitationsGetCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? filterEmail = null;
            //List<string>? filterRoles = null;
            //List<string>? filterVisibleApps = null;
            //List<string>? sort = null;
            //List<string>? fieldsUserInvitations = null;
            //int? limit = null;
            //List<string>? include = null;
            //List<string>? fieldsApps = null;
            //int? limitVisibleApps = null;
            //var response = instance.UserInvitationsGetCollection(filterEmail, filterRoles, filterVisibleApps, sort, fieldsUserInvitations, limit, include, fieldsApps, limitVisibleApps);
            //Assert.IsType<UserInvitationsResponse>(response);
        }

        /// <summary>
        /// Test UserInvitationsGetInstance
        /// </summary>
        [Fact]
        public void UserInvitationsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsUserInvitations = null;
            //List<string>? include = null;
            //List<string>? fieldsApps = null;
            //int? limitVisibleApps = null;
            //var response = instance.UserInvitationsGetInstance(id, fieldsUserInvitations, include, fieldsApps, limitVisibleApps);
            //Assert.IsType<UserInvitationResponse>(response);
        }

        /// <summary>
        /// Test UserInvitationsVisibleAppsGetToManyRelated
        /// </summary>
        [Fact]
        public void UserInvitationsVisibleAppsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsApps = null;
            //int? limit = null;
            //var response = instance.UserInvitationsVisibleAppsGetToManyRelated(id, fieldsApps, limit);
            //Assert.IsType<AppsResponse>(response);
        }
    }
}
