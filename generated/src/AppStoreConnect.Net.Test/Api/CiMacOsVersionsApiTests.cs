/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing CiMacOsVersionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CiMacOsVersionsApiTests : IDisposable
    {
        private CiMacOsVersionsApi instance;

        public CiMacOsVersionsApiTests()
        {
            instance = new CiMacOsVersionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CiMacOsVersionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CiMacOsVersionsApi
            //Assert.IsType<CiMacOsVersionsApi>(instance);
        }

        /// <summary>
        /// Test CiMacOsVersionsGetCollection
        /// </summary>
        [Fact]
        public void CiMacOsVersionsGetCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? fieldsCiMacOsVersions = null;
            //int? limit = null;
            //List<string>? include = null;
            //List<string>? fieldsCiXcodeVersions = null;
            //int? limitXcodeVersions = null;
            //var response = instance.CiMacOsVersionsGetCollection(fieldsCiMacOsVersions, limit, include, fieldsCiXcodeVersions, limitXcodeVersions);
            //Assert.IsType<CiMacOsVersionsResponse>(response);
        }

        /// <summary>
        /// Test CiMacOsVersionsGetInstance
        /// </summary>
        [Fact]
        public void CiMacOsVersionsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsCiMacOsVersions = null;
            //List<string>? include = null;
            //List<string>? fieldsCiXcodeVersions = null;
            //int? limitXcodeVersions = null;
            //var response = instance.CiMacOsVersionsGetInstance(id, fieldsCiMacOsVersions, include, fieldsCiXcodeVersions, limitXcodeVersions);
            //Assert.IsType<CiMacOsVersionResponse>(response);
        }

        /// <summary>
        /// Test CiMacOsVersionsXcodeVersionsGetToManyRelated
        /// </summary>
        [Fact]
        public void CiMacOsVersionsXcodeVersionsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsCiXcodeVersions = null;
            //List<string>? fieldsCiMacOsVersions = null;
            //int? limit = null;
            //int? limitMacOsVersions = null;
            //List<string>? include = null;
            //var response = instance.CiMacOsVersionsXcodeVersionsGetToManyRelated(id, fieldsCiXcodeVersions, fieldsCiMacOsVersions, limit, limitMacOsVersions, include);
            //Assert.IsType<CiXcodeVersionsResponse>(response);
        }
    }
}
