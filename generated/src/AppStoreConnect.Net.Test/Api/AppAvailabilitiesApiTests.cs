/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing AppAvailabilitiesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AppAvailabilitiesApiTests : IDisposable
    {
        private AppAvailabilitiesApi instance;

        public AppAvailabilitiesApiTests()
        {
            instance = new AppAvailabilitiesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AppAvailabilitiesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AppAvailabilitiesApi
            //Assert.IsType<AppAvailabilitiesApi>(instance);
        }

        /// <summary>
        /// Test AppAvailabilitiesAvailableTerritoriesGetToManyRelated
        /// </summary>
        [Fact]
        public void AppAvailabilitiesAvailableTerritoriesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsTerritories = null;
            //int? limit = null;
            //var response = instance.AppAvailabilitiesAvailableTerritoriesGetToManyRelated(id, fieldsTerritories, limit);
            //Assert.IsType<TerritoriesResponse>(response);
        }

        /// <summary>
        /// Test AppAvailabilitiesCreateInstance
        /// </summary>
        [Fact]
        public void AppAvailabilitiesCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AppAvailabilityCreateRequest appAvailabilityCreateRequest = null;
            //var response = instance.AppAvailabilitiesCreateInstance(appAvailabilityCreateRequest);
            //Assert.IsType<AppAvailabilityResponse>(response);
        }

        /// <summary>
        /// Test AppAvailabilitiesGetInstance
        /// </summary>
        [Fact]
        public void AppAvailabilitiesGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsAppAvailabilities = null;
            //List<string>? include = null;
            //List<string>? fieldsTerritories = null;
            //int? limitAvailableTerritories = null;
            //var response = instance.AppAvailabilitiesGetInstance(id, fieldsAppAvailabilities, include, fieldsTerritories, limitAvailableTerritories);
            //Assert.IsType<AppAvailabilityResponse>(response);
        }
    }
}
