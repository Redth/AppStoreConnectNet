/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing AppPricePointsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AppPricePointsApiTests : IDisposable
    {
        private AppPricePointsApi instance;

        public AppPricePointsApiTests()
        {
            instance = new AppPricePointsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AppPricePointsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AppPricePointsApi
            //Assert.IsType<AppPricePointsApi>(instance);
        }

        /// <summary>
        /// Test AppPricePointsEqualizationsGetToManyRelated
        /// </summary>
        [Fact]
        public void AppPricePointsEqualizationsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterTerritory = null;
            //List<string>? fieldsAppPricePoints = null;
            //List<string>? fieldsApps = null;
            //List<string>? fieldsTerritories = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.AppPricePointsEqualizationsGetToManyRelated(id, filterTerritory, fieldsAppPricePoints, fieldsApps, fieldsTerritories, limit, include);
            //Assert.IsType<AppPricePointsV3Response>(response);
        }

        /// <summary>
        /// Test AppPricePointsGetCollection
        /// </summary>
        [Fact]
        public void AppPricePointsGetCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? filterPriceTier = null;
            //List<string>? filterTerritory = null;
            //List<string>? fieldsAppPricePoints = null;
            //int? limit = null;
            //List<string>? include = null;
            //List<string>? fieldsTerritories = null;
            //var response = instance.AppPricePointsGetCollection(filterPriceTier, filterTerritory, fieldsAppPricePoints, limit, include, fieldsTerritories);
            //Assert.IsType<AppPricePointsResponse>(response);
        }

        /// <summary>
        /// Test AppPricePointsGetInstance
        /// </summary>
        [Fact]
        public void AppPricePointsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsAppPricePoints = null;
            //List<string>? include = null;
            //var response = instance.AppPricePointsGetInstance(id, fieldsAppPricePoints, include);
            //Assert.IsType<AppPricePointV3Response>(response);
        }

        /// <summary>
        /// Test AppPricePointsGetInstance_0
        /// </summary>
        [Fact]
        public void AppPricePointsGetInstance_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsAppPricePoints = null;
            //List<string>? include = null;
            //List<string>? fieldsTerritories = null;
            //var response = instance.AppPricePointsGetInstance_0(id, fieldsAppPricePoints, include, fieldsTerritories);
            //Assert.IsType<AppPricePointResponse>(response);
        }

        /// <summary>
        /// Test AppPricePointsTerritoryGetToOneRelated
        /// </summary>
        [Fact]
        public void AppPricePointsTerritoryGetToOneRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsTerritories = null;
            //var response = instance.AppPricePointsTerritoryGetToOneRelated(id, fieldsTerritories);
            //Assert.IsType<TerritoryResponse>(response);
        }
    }
}
