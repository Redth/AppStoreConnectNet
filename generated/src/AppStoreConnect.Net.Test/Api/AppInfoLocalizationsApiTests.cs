/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing AppInfoLocalizationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AppInfoLocalizationsApiTests : IDisposable
    {
        private AppInfoLocalizationsApi instance;

        public AppInfoLocalizationsApiTests()
        {
            instance = new AppInfoLocalizationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AppInfoLocalizationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AppInfoLocalizationsApi
            //Assert.IsType<AppInfoLocalizationsApi>(instance);
        }

        /// <summary>
        /// Test AppInfoLocalizationsCreateInstance
        /// </summary>
        [Fact]
        public void AppInfoLocalizationsCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AppInfoLocalizationCreateRequest appInfoLocalizationCreateRequest = null;
            //var response = instance.AppInfoLocalizationsCreateInstance(appInfoLocalizationCreateRequest);
            //Assert.IsType<AppInfoLocalizationResponse>(response);
        }

        /// <summary>
        /// Test AppInfoLocalizationsDeleteInstance
        /// </summary>
        [Fact]
        public void AppInfoLocalizationsDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.AppInfoLocalizationsDeleteInstance(id);
        }

        /// <summary>
        /// Test AppInfoLocalizationsGetInstance
        /// </summary>
        [Fact]
        public void AppInfoLocalizationsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsAppInfoLocalizations = null;
            //List<string>? include = null;
            //var response = instance.AppInfoLocalizationsGetInstance(id, fieldsAppInfoLocalizations, include);
            //Assert.IsType<AppInfoLocalizationResponse>(response);
        }

        /// <summary>
        /// Test AppInfoLocalizationsUpdateInstance
        /// </summary>
        [Fact]
        public void AppInfoLocalizationsUpdateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //AppInfoLocalizationUpdateRequest appInfoLocalizationUpdateRequest = null;
            //var response = instance.AppInfoLocalizationsUpdateInstance(id, appInfoLocalizationUpdateRequest);
            //Assert.IsType<AppInfoLocalizationResponse>(response);
        }
    }
}
