/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing CertificatesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CertificatesApiTests : IDisposable
    {
        private CertificatesApi instance;

        public CertificatesApiTests()
        {
            instance = new CertificatesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CertificatesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CertificatesApi
            //Assert.IsType<CertificatesApi>(instance);
        }

        /// <summary>
        /// Test CertificatesCreateInstance
        /// </summary>
        [Fact]
        public void CertificatesCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CertificateCreateRequest certificateCreateRequest = null;
            //var response = instance.CertificatesCreateInstance(certificateCreateRequest);
            //Assert.IsType<CertificateResponse>(response);
        }

        /// <summary>
        /// Test CertificatesDeleteInstance
        /// </summary>
        [Fact]
        public void CertificatesDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.CertificatesDeleteInstance(id);
        }

        /// <summary>
        /// Test CertificatesGetCollection
        /// </summary>
        [Fact]
        public void CertificatesGetCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? filterCertificateType = null;
            //List<string>? filterDisplayName = null;
            //List<string>? filterSerialNumber = null;
            //List<string>? filterId = null;
            //List<string>? sort = null;
            //List<string>? fieldsCertificates = null;
            //int? limit = null;
            //var response = instance.CertificatesGetCollection(filterCertificateType, filterDisplayName, filterSerialNumber, filterId, sort, fieldsCertificates, limit);
            //Assert.IsType<CertificatesResponse>(response);
        }

        /// <summary>
        /// Test CertificatesGetInstance
        /// </summary>
        [Fact]
        public void CertificatesGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsCertificates = null;
            //var response = instance.CertificatesGetInstance(id, fieldsCertificates);
            //Assert.IsType<CertificateResponse>(response);
        }
    }
}
