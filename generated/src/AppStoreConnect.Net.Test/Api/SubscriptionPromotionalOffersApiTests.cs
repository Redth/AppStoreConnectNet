/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing SubscriptionPromotionalOffersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SubscriptionPromotionalOffersApiTests : IDisposable
    {
        private SubscriptionPromotionalOffersApi instance;

        public SubscriptionPromotionalOffersApiTests()
        {
            instance = new SubscriptionPromotionalOffersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SubscriptionPromotionalOffersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SubscriptionPromotionalOffersApi
            //Assert.IsType<SubscriptionPromotionalOffersApi>(instance);
        }

        /// <summary>
        /// Test SubscriptionPromotionalOffersCreateInstance
        /// </summary>
        [Fact]
        public void SubscriptionPromotionalOffersCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubscriptionPromotionalOfferCreateRequest subscriptionPromotionalOfferCreateRequest = null;
            //var response = instance.SubscriptionPromotionalOffersCreateInstance(subscriptionPromotionalOfferCreateRequest);
            //Assert.IsType<SubscriptionPromotionalOfferResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionPromotionalOffersDeleteInstance
        /// </summary>
        [Fact]
        public void SubscriptionPromotionalOffersDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.SubscriptionPromotionalOffersDeleteInstance(id);
        }

        /// <summary>
        /// Test SubscriptionPromotionalOffersGetInstance
        /// </summary>
        [Fact]
        public void SubscriptionPromotionalOffersGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsSubscriptionPromotionalOffers = null;
            //List<string>? include = null;
            //List<string>? fieldsSubscriptionPromotionalOfferPrices = null;
            //int? limitPrices = null;
            //var response = instance.SubscriptionPromotionalOffersGetInstance(id, fieldsSubscriptionPromotionalOffers, include, fieldsSubscriptionPromotionalOfferPrices, limitPrices);
            //Assert.IsType<SubscriptionPromotionalOfferResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionPromotionalOffersPricesGetToManyRelated
        /// </summary>
        [Fact]
        public void SubscriptionPromotionalOffersPricesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterTerritory = null;
            //List<string>? fieldsSubscriptionPricePoints = null;
            //List<string>? fieldsTerritories = null;
            //List<string>? fieldsSubscriptionPromotionalOfferPrices = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.SubscriptionPromotionalOffersPricesGetToManyRelated(id, filterTerritory, fieldsSubscriptionPricePoints, fieldsTerritories, fieldsSubscriptionPromotionalOfferPrices, limit, include);
            //Assert.IsType<SubscriptionPromotionalOfferPricesResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionPromotionalOffersUpdateInstance
        /// </summary>
        [Fact]
        public void SubscriptionPromotionalOffersUpdateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //SubscriptionPromotionalOfferUpdateRequest subscriptionPromotionalOfferUpdateRequest = null;
            //var response = instance.SubscriptionPromotionalOffersUpdateInstance(id, subscriptionPromotionalOfferUpdateRequest);
            //Assert.IsType<SubscriptionPromotionalOfferResponse>(response);
        }
    }
}
