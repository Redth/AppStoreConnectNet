/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing ScmRepositoriesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ScmRepositoriesApiTests : IDisposable
    {
        private ScmRepositoriesApi instance;

        public ScmRepositoriesApiTests()
        {
            instance = new ScmRepositoriesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ScmRepositoriesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ScmRepositoriesApi
            //Assert.IsType<ScmRepositoriesApi>(instance);
        }

        /// <summary>
        /// Test ScmRepositoriesGetCollection
        /// </summary>
        [Fact]
        public void ScmRepositoriesGetCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? filterId = null;
            //List<string>? fieldsScmRepositories = null;
            //int? limit = null;
            //List<string>? include = null;
            //List<string>? fieldsScmGitReferences = null;
            //List<string>? fieldsScmPullRequests = null;
            //var response = instance.ScmRepositoriesGetCollection(filterId, fieldsScmRepositories, limit, include, fieldsScmGitReferences, fieldsScmPullRequests);
            //Assert.IsType<ScmRepositoriesResponse>(response);
        }

        /// <summary>
        /// Test ScmRepositoriesGetInstance
        /// </summary>
        [Fact]
        public void ScmRepositoriesGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsScmRepositories = null;
            //List<string>? include = null;
            //List<string>? fieldsScmGitReferences = null;
            //List<string>? fieldsScmPullRequests = null;
            //var response = instance.ScmRepositoriesGetInstance(id, fieldsScmRepositories, include, fieldsScmGitReferences, fieldsScmPullRequests);
            //Assert.IsType<ScmRepositoryResponse>(response);
        }

        /// <summary>
        /// Test ScmRepositoriesGitReferencesGetToManyRelated
        /// </summary>
        [Fact]
        public void ScmRepositoriesGitReferencesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsScmGitReferences = null;
            //List<string>? fieldsScmRepositories = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.ScmRepositoriesGitReferencesGetToManyRelated(id, fieldsScmGitReferences, fieldsScmRepositories, limit, include);
            //Assert.IsType<ScmGitReferencesResponse>(response);
        }

        /// <summary>
        /// Test ScmRepositoriesPullRequestsGetToManyRelated
        /// </summary>
        [Fact]
        public void ScmRepositoriesPullRequestsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsScmPullRequests = null;
            //List<string>? fieldsScmRepositories = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.ScmRepositoriesPullRequestsGetToManyRelated(id, fieldsScmPullRequests, fieldsScmRepositories, limit, include);
            //Assert.IsType<ScmPullRequestsResponse>(response);
        }
    }
}
