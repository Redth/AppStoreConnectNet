/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing AppStoreVersionLocalizationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AppStoreVersionLocalizationsApiTests : IDisposable
    {
        private AppStoreVersionLocalizationsApi instance;

        public AppStoreVersionLocalizationsApiTests()
        {
            instance = new AppStoreVersionLocalizationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AppStoreVersionLocalizationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AppStoreVersionLocalizationsApi
            //Assert.IsType<AppStoreVersionLocalizationsApi>(instance);
        }

        /// <summary>
        /// Test AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelated
        /// </summary>
        [Fact]
        public void AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterPreviewType = null;
            //List<string>? filterAppCustomProductPageLocalization = null;
            //List<string>? filterAppStoreVersionExperimentTreatmentLocalization = null;
            //List<string>? fieldsAppCustomProductPageLocalizations = null;
            //List<string>? fieldsAppStoreVersionExperimentTreatmentLocalizations = null;
            //List<string>? fieldsAppPreviews = null;
            //List<string>? fieldsAppPreviewSets = null;
            //List<string>? fieldsAppStoreVersionLocalizations = null;
            //int? limit = null;
            //int? limitAppPreviews = null;
            //List<string>? include = null;
            //var response = instance.AppStoreVersionLocalizationsAppPreviewSetsGetToManyRelated(id, filterPreviewType, filterAppCustomProductPageLocalization, filterAppStoreVersionExperimentTreatmentLocalization, fieldsAppCustomProductPageLocalizations, fieldsAppStoreVersionExperimentTreatmentLocalizations, fieldsAppPreviews, fieldsAppPreviewSets, fieldsAppStoreVersionLocalizations, limit, limitAppPreviews, include);
            //Assert.IsType<AppPreviewSetsResponse>(response);
        }

        /// <summary>
        /// Test AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated
        /// </summary>
        [Fact]
        public void AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterScreenshotDisplayType = null;
            //List<string>? filterAppCustomProductPageLocalization = null;
            //List<string>? filterAppStoreVersionExperimentTreatmentLocalization = null;
            //List<string>? fieldsAppScreenshotSets = null;
            //List<string>? fieldsAppCustomProductPageLocalizations = null;
            //List<string>? fieldsAppStoreVersionExperimentTreatmentLocalizations = null;
            //List<string>? fieldsAppScreenshots = null;
            //List<string>? fieldsAppStoreVersionLocalizations = null;
            //int? limit = null;
            //int? limitAppScreenshots = null;
            //List<string>? include = null;
            //var response = instance.AppStoreVersionLocalizationsAppScreenshotSetsGetToManyRelated(id, filterScreenshotDisplayType, filterAppCustomProductPageLocalization, filterAppStoreVersionExperimentTreatmentLocalization, fieldsAppScreenshotSets, fieldsAppCustomProductPageLocalizations, fieldsAppStoreVersionExperimentTreatmentLocalizations, fieldsAppScreenshots, fieldsAppStoreVersionLocalizations, limit, limitAppScreenshots, include);
            //Assert.IsType<AppScreenshotSetsResponse>(response);
        }

        /// <summary>
        /// Test AppStoreVersionLocalizationsCreateInstance
        /// </summary>
        [Fact]
        public void AppStoreVersionLocalizationsCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AppStoreVersionLocalizationCreateRequest appStoreVersionLocalizationCreateRequest = null;
            //var response = instance.AppStoreVersionLocalizationsCreateInstance(appStoreVersionLocalizationCreateRequest);
            //Assert.IsType<AppStoreVersionLocalizationResponse>(response);
        }

        /// <summary>
        /// Test AppStoreVersionLocalizationsDeleteInstance
        /// </summary>
        [Fact]
        public void AppStoreVersionLocalizationsDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.AppStoreVersionLocalizationsDeleteInstance(id);
        }

        /// <summary>
        /// Test AppStoreVersionLocalizationsGetInstance
        /// </summary>
        [Fact]
        public void AppStoreVersionLocalizationsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsAppStoreVersionLocalizations = null;
            //List<string>? include = null;
            //List<string>? fieldsAppScreenshotSets = null;
            //List<string>? fieldsAppPreviewSets = null;
            //int? limitAppPreviewSets = null;
            //int? limitAppScreenshotSets = null;
            //var response = instance.AppStoreVersionLocalizationsGetInstance(id, fieldsAppStoreVersionLocalizations, include, fieldsAppScreenshotSets, fieldsAppPreviewSets, limitAppPreviewSets, limitAppScreenshotSets);
            //Assert.IsType<AppStoreVersionLocalizationResponse>(response);
        }

        /// <summary>
        /// Test AppStoreVersionLocalizationsUpdateInstance
        /// </summary>
        [Fact]
        public void AppStoreVersionLocalizationsUpdateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //AppStoreVersionLocalizationUpdateRequest appStoreVersionLocalizationUpdateRequest = null;
            //var response = instance.AppStoreVersionLocalizationsUpdateInstance(id, appStoreVersionLocalizationUpdateRequest);
            //Assert.IsType<AppStoreVersionLocalizationResponse>(response);
        }
    }
}
