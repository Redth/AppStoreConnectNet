/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing SubscriptionOfferCodesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SubscriptionOfferCodesApiTests : IDisposable
    {
        private SubscriptionOfferCodesApi instance;

        public SubscriptionOfferCodesApiTests()
        {
            instance = new SubscriptionOfferCodesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SubscriptionOfferCodesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SubscriptionOfferCodesApi
            //Assert.IsType<SubscriptionOfferCodesApi>(instance);
        }

        /// <summary>
        /// Test SubscriptionOfferCodesCreateInstance
        /// </summary>
        [Fact]
        public void SubscriptionOfferCodesCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubscriptionOfferCodeCreateRequest subscriptionOfferCodeCreateRequest = null;
            //var response = instance.SubscriptionOfferCodesCreateInstance(subscriptionOfferCodeCreateRequest);
            //Assert.IsType<SubscriptionOfferCodeResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionOfferCodesCustomCodesGetToManyRelated
        /// </summary>
        [Fact]
        public void SubscriptionOfferCodesCustomCodesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsSubscriptionOfferCodeCustomCodes = null;
            //List<string>? fieldsSubscriptionOfferCodes = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.SubscriptionOfferCodesCustomCodesGetToManyRelated(id, fieldsSubscriptionOfferCodeCustomCodes, fieldsSubscriptionOfferCodes, limit, include);
            //Assert.IsType<SubscriptionOfferCodeCustomCodesResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionOfferCodesGetInstance
        /// </summary>
        [Fact]
        public void SubscriptionOfferCodesGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsSubscriptionOfferCodes = null;
            //List<string>? include = null;
            //List<string>? fieldsSubscriptionOfferCodeCustomCodes = null;
            //List<string>? fieldsSubscriptionOfferCodeOneTimeUseCodes = null;
            //List<string>? fieldsSubscriptionOfferCodePrices = null;
            //int? limitCustomCodes = null;
            //int? limitOneTimeUseCodes = null;
            //int? limitPrices = null;
            //var response = instance.SubscriptionOfferCodesGetInstance(id, fieldsSubscriptionOfferCodes, include, fieldsSubscriptionOfferCodeCustomCodes, fieldsSubscriptionOfferCodeOneTimeUseCodes, fieldsSubscriptionOfferCodePrices, limitCustomCodes, limitOneTimeUseCodes, limitPrices);
            //Assert.IsType<SubscriptionOfferCodeResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionOfferCodesOneTimeUseCodesGetToManyRelated
        /// </summary>
        [Fact]
        public void SubscriptionOfferCodesOneTimeUseCodesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsSubscriptionOfferCodes = null;
            //List<string>? fieldsSubscriptionOfferCodeOneTimeUseCodes = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.SubscriptionOfferCodesOneTimeUseCodesGetToManyRelated(id, fieldsSubscriptionOfferCodes, fieldsSubscriptionOfferCodeOneTimeUseCodes, limit, include);
            //Assert.IsType<SubscriptionOfferCodeOneTimeUseCodesResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionOfferCodesPricesGetToManyRelated
        /// </summary>
        [Fact]
        public void SubscriptionOfferCodesPricesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterTerritory = null;
            //List<string>? fieldsSubscriptionPricePoints = null;
            //List<string>? fieldsTerritories = null;
            //List<string>? fieldsSubscriptionOfferCodePrices = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.SubscriptionOfferCodesPricesGetToManyRelated(id, filterTerritory, fieldsSubscriptionPricePoints, fieldsTerritories, fieldsSubscriptionOfferCodePrices, limit, include);
            //Assert.IsType<SubscriptionOfferCodePricesResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionOfferCodesUpdateInstance
        /// </summary>
        [Fact]
        public void SubscriptionOfferCodesUpdateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //SubscriptionOfferCodeUpdateRequest subscriptionOfferCodeUpdateRequest = null;
            //var response = instance.SubscriptionOfferCodesUpdateInstance(id, subscriptionOfferCodeUpdateRequest);
            //Assert.IsType<SubscriptionOfferCodeResponse>(response);
        }
    }
}
