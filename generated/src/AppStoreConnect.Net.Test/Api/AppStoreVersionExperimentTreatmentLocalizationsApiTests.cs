/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing AppStoreVersionExperimentTreatmentLocalizationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AppStoreVersionExperimentTreatmentLocalizationsApiTests : IDisposable
    {
        private AppStoreVersionExperimentTreatmentLocalizationsApi instance;

        public AppStoreVersionExperimentTreatmentLocalizationsApiTests()
        {
            instance = new AppStoreVersionExperimentTreatmentLocalizationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AppStoreVersionExperimentTreatmentLocalizationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AppStoreVersionExperimentTreatmentLocalizationsApi
            //Assert.IsType<AppStoreVersionExperimentTreatmentLocalizationsApi>(instance);
        }

        /// <summary>
        /// Test AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated
        /// </summary>
        [Fact]
        public void AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterPreviewType = null;
            //List<string>? filterAppCustomProductPageLocalization = null;
            //List<string>? filterAppStoreVersionLocalization = null;
            //List<string>? fieldsAppCustomProductPageLocalizations = null;
            //List<string>? fieldsAppStoreVersionExperimentTreatmentLocalizations = null;
            //List<string>? fieldsAppPreviews = null;
            //List<string>? fieldsAppPreviewSets = null;
            //List<string>? fieldsAppStoreVersionLocalizations = null;
            //int? limit = null;
            //int? limitAppPreviews = null;
            //List<string>? include = null;
            //var response = instance.AppStoreVersionExperimentTreatmentLocalizationsAppPreviewSetsGetToManyRelated(id, filterPreviewType, filterAppCustomProductPageLocalization, filterAppStoreVersionLocalization, fieldsAppCustomProductPageLocalizations, fieldsAppStoreVersionExperimentTreatmentLocalizations, fieldsAppPreviews, fieldsAppPreviewSets, fieldsAppStoreVersionLocalizations, limit, limitAppPreviews, include);
            //Assert.IsType<AppPreviewSetsResponse>(response);
        }

        /// <summary>
        /// Test AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated
        /// </summary>
        [Fact]
        public void AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterScreenshotDisplayType = null;
            //List<string>? filterAppCustomProductPageLocalization = null;
            //List<string>? filterAppStoreVersionLocalization = null;
            //List<string>? fieldsAppScreenshotSets = null;
            //List<string>? fieldsAppCustomProductPageLocalizations = null;
            //List<string>? fieldsAppStoreVersionExperimentTreatmentLocalizations = null;
            //List<string>? fieldsAppScreenshots = null;
            //List<string>? fieldsAppStoreVersionLocalizations = null;
            //int? limit = null;
            //int? limitAppScreenshots = null;
            //List<string>? include = null;
            //var response = instance.AppStoreVersionExperimentTreatmentLocalizationsAppScreenshotSetsGetToManyRelated(id, filterScreenshotDisplayType, filterAppCustomProductPageLocalization, filterAppStoreVersionLocalization, fieldsAppScreenshotSets, fieldsAppCustomProductPageLocalizations, fieldsAppStoreVersionExperimentTreatmentLocalizations, fieldsAppScreenshots, fieldsAppStoreVersionLocalizations, limit, limitAppScreenshots, include);
            //Assert.IsType<AppScreenshotSetsResponse>(response);
        }

        /// <summary>
        /// Test AppStoreVersionExperimentTreatmentLocalizationsCreateInstance
        /// </summary>
        [Fact]
        public void AppStoreVersionExperimentTreatmentLocalizationsCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AppStoreVersionExperimentTreatmentLocalizationCreateRequest appStoreVersionExperimentTreatmentLocalizationCreateRequest = null;
            //var response = instance.AppStoreVersionExperimentTreatmentLocalizationsCreateInstance(appStoreVersionExperimentTreatmentLocalizationCreateRequest);
            //Assert.IsType<AppStoreVersionExperimentTreatmentLocalizationResponse>(response);
        }

        /// <summary>
        /// Test AppStoreVersionExperimentTreatmentLocalizationsDeleteInstance
        /// </summary>
        [Fact]
        public void AppStoreVersionExperimentTreatmentLocalizationsDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.AppStoreVersionExperimentTreatmentLocalizationsDeleteInstance(id);
        }

        /// <summary>
        /// Test AppStoreVersionExperimentTreatmentLocalizationsGetInstance
        /// </summary>
        [Fact]
        public void AppStoreVersionExperimentTreatmentLocalizationsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsAppStoreVersionExperimentTreatmentLocalizations = null;
            //List<string>? include = null;
            //List<string>? fieldsAppScreenshotSets = null;
            //List<string>? fieldsAppPreviewSets = null;
            //int? limitAppPreviewSets = null;
            //int? limitAppScreenshotSets = null;
            //var response = instance.AppStoreVersionExperimentTreatmentLocalizationsGetInstance(id, fieldsAppStoreVersionExperimentTreatmentLocalizations, include, fieldsAppScreenshotSets, fieldsAppPreviewSets, limitAppPreviewSets, limitAppScreenshotSets);
            //Assert.IsType<AppStoreVersionExperimentTreatmentLocalizationResponse>(response);
        }
    }
}
