/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing CiXcodeVersionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CiXcodeVersionsApiTests : IDisposable
    {
        private CiXcodeVersionsApi instance;

        public CiXcodeVersionsApiTests()
        {
            instance = new CiXcodeVersionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CiXcodeVersionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CiXcodeVersionsApi
            //Assert.IsType<CiXcodeVersionsApi>(instance);
        }

        /// <summary>
        /// Test CiXcodeVersionsGetCollection
        /// </summary>
        [Fact]
        public void CiXcodeVersionsGetCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? fieldsCiXcodeVersions = null;
            //int? limit = null;
            //List<string>? include = null;
            //List<string>? fieldsCiMacOsVersions = null;
            //int? limitMacOsVersions = null;
            //var response = instance.CiXcodeVersionsGetCollection(fieldsCiXcodeVersions, limit, include, fieldsCiMacOsVersions, limitMacOsVersions);
            //Assert.IsType<CiXcodeVersionsResponse>(response);
        }

        /// <summary>
        /// Test CiXcodeVersionsGetInstance
        /// </summary>
        [Fact]
        public void CiXcodeVersionsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsCiXcodeVersions = null;
            //List<string>? include = null;
            //List<string>? fieldsCiMacOsVersions = null;
            //int? limitMacOsVersions = null;
            //var response = instance.CiXcodeVersionsGetInstance(id, fieldsCiXcodeVersions, include, fieldsCiMacOsVersions, limitMacOsVersions);
            //Assert.IsType<CiXcodeVersionResponse>(response);
        }

        /// <summary>
        /// Test CiXcodeVersionsMacOsVersionsGetToManyRelated
        /// </summary>
        [Fact]
        public void CiXcodeVersionsMacOsVersionsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsCiXcodeVersions = null;
            //List<string>? fieldsCiMacOsVersions = null;
            //int? limit = null;
            //int? limitXcodeVersions = null;
            //List<string>? include = null;
            //var response = instance.CiXcodeVersionsMacOsVersionsGetToManyRelated(id, fieldsCiXcodeVersions, fieldsCiMacOsVersions, limit, limitXcodeVersions, include);
            //Assert.IsType<CiMacOsVersionsResponse>(response);
        }
    }
}
