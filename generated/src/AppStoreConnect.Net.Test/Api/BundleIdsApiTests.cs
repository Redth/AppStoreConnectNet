/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing BundleIdsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BundleIdsApiTests : IDisposable
    {
        private BundleIdsApi instance;

        public BundleIdsApiTests()
        {
            instance = new BundleIdsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BundleIdsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BundleIdsApi
            //Assert.IsType<BundleIdsApi>(instance);
        }

        /// <summary>
        /// Test BundleIdsAppGetToOneRelated
        /// </summary>
        [Fact]
        public void BundleIdsAppGetToOneRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsApps = null;
            //var response = instance.BundleIdsAppGetToOneRelated(id, fieldsApps);
            //Assert.IsType<AppResponse>(response);
        }

        /// <summary>
        /// Test BundleIdsBundleIdCapabilitiesGetToManyRelated
        /// </summary>
        [Fact]
        public void BundleIdsBundleIdCapabilitiesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsBundleIdCapabilities = null;
            //int? limit = null;
            //var response = instance.BundleIdsBundleIdCapabilitiesGetToManyRelated(id, fieldsBundleIdCapabilities, limit);
            //Assert.IsType<BundleIdCapabilitiesResponse>(response);
        }

        /// <summary>
        /// Test BundleIdsCreateInstance
        /// </summary>
        [Fact]
        public void BundleIdsCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BundleIdCreateRequest bundleIdCreateRequest = null;
            //var response = instance.BundleIdsCreateInstance(bundleIdCreateRequest);
            //Assert.IsType<BundleIdResponse>(response);
        }

        /// <summary>
        /// Test BundleIdsDeleteInstance
        /// </summary>
        [Fact]
        public void BundleIdsDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.BundleIdsDeleteInstance(id);
        }

        /// <summary>
        /// Test BundleIdsGetCollection
        /// </summary>
        [Fact]
        public void BundleIdsGetCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? filterIdentifier = null;
            //List<string>? filterName = null;
            //List<string>? filterPlatform = null;
            //List<string>? filterSeedId = null;
            //List<string>? filterId = null;
            //List<string>? sort = null;
            //List<string>? fieldsBundleIds = null;
            //int? limit = null;
            //List<string>? include = null;
            //List<string>? fieldsBundleIdCapabilities = null;
            //List<string>? fieldsProfiles = null;
            //List<string>? fieldsApps = null;
            //int? limitBundleIdCapabilities = null;
            //int? limitProfiles = null;
            //var response = instance.BundleIdsGetCollection(filterIdentifier, filterName, filterPlatform, filterSeedId, filterId, sort, fieldsBundleIds, limit, include, fieldsBundleIdCapabilities, fieldsProfiles, fieldsApps, limitBundleIdCapabilities, limitProfiles);
            //Assert.IsType<BundleIdsResponse>(response);
        }

        /// <summary>
        /// Test BundleIdsGetInstance
        /// </summary>
        [Fact]
        public void BundleIdsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsBundleIds = null;
            //List<string>? include = null;
            //List<string>? fieldsBundleIdCapabilities = null;
            //List<string>? fieldsProfiles = null;
            //List<string>? fieldsApps = null;
            //int? limitBundleIdCapabilities = null;
            //int? limitProfiles = null;
            //var response = instance.BundleIdsGetInstance(id, fieldsBundleIds, include, fieldsBundleIdCapabilities, fieldsProfiles, fieldsApps, limitBundleIdCapabilities, limitProfiles);
            //Assert.IsType<BundleIdResponse>(response);
        }

        /// <summary>
        /// Test BundleIdsProfilesGetToManyRelated
        /// </summary>
        [Fact]
        public void BundleIdsProfilesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsProfiles = null;
            //int? limit = null;
            //var response = instance.BundleIdsProfilesGetToManyRelated(id, fieldsProfiles, limit);
            //Assert.IsType<ProfilesResponse>(response);
        }

        /// <summary>
        /// Test BundleIdsUpdateInstance
        /// </summary>
        [Fact]
        public void BundleIdsUpdateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //BundleIdUpdateRequest bundleIdUpdateRequest = null;
            //var response = instance.BundleIdsUpdateInstance(id, bundleIdUpdateRequest);
            //Assert.IsType<BundleIdResponse>(response);
        }
    }
}
