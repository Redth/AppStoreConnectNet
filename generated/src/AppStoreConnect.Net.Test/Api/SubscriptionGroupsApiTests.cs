/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing SubscriptionGroupsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SubscriptionGroupsApiTests : IDisposable
    {
        private SubscriptionGroupsApi instance;

        public SubscriptionGroupsApiTests()
        {
            instance = new SubscriptionGroupsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SubscriptionGroupsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SubscriptionGroupsApi
            //Assert.IsType<SubscriptionGroupsApi>(instance);
        }

        /// <summary>
        /// Test SubscriptionGroupsCreateInstance
        /// </summary>
        [Fact]
        public void SubscriptionGroupsCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubscriptionGroupCreateRequest subscriptionGroupCreateRequest = null;
            //var response = instance.SubscriptionGroupsCreateInstance(subscriptionGroupCreateRequest);
            //Assert.IsType<SubscriptionGroupResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionGroupsDeleteInstance
        /// </summary>
        [Fact]
        public void SubscriptionGroupsDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.SubscriptionGroupsDeleteInstance(id);
        }

        /// <summary>
        /// Test SubscriptionGroupsGetInstance
        /// </summary>
        [Fact]
        public void SubscriptionGroupsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsSubscriptionGroups = null;
            //List<string>? include = null;
            //List<string>? fieldsSubscriptions = null;
            //List<string>? fieldsSubscriptionGroupLocalizations = null;
            //int? limitSubscriptionGroupLocalizations = null;
            //int? limitSubscriptions = null;
            //var response = instance.SubscriptionGroupsGetInstance(id, fieldsSubscriptionGroups, include, fieldsSubscriptions, fieldsSubscriptionGroupLocalizations, limitSubscriptionGroupLocalizations, limitSubscriptions);
            //Assert.IsType<SubscriptionGroupResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelated
        /// </summary>
        [Fact]
        public void SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsSubscriptionGroups = null;
            //List<string>? fieldsSubscriptionGroupLocalizations = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.SubscriptionGroupsSubscriptionGroupLocalizationsGetToManyRelated(id, fieldsSubscriptionGroups, fieldsSubscriptionGroupLocalizations, limit, include);
            //Assert.IsType<SubscriptionGroupLocalizationsResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionGroupsSubscriptionsGetToManyRelated
        /// </summary>
        [Fact]
        public void SubscriptionGroupsSubscriptionsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterName = null;
            //List<string>? filterProductId = null;
            //List<string>? filterState = null;
            //List<string>? sort = null;
            //List<string>? fieldsPromotedPurchases = null;
            //List<string>? fieldsSubscriptionPromotionalOffers = null;
            //List<string>? fieldsSubscriptionOfferCodes = null;
            //List<string>? fieldsSubscriptionAppStoreReviewScreenshots = null;
            //List<string>? fieldsSubscriptions = null;
            //List<string>? fieldsSubscriptionGroups = null;
            //List<string>? fieldsSubscriptionIntroductoryOffers = null;
            //List<string>? fieldsSubscriptionPrices = null;
            //List<string>? fieldsSubscriptionLocalizations = null;
            //int? limit = null;
            //int? limitSubscriptionLocalizations = null;
            //int? limitIntroductoryOffers = null;
            //int? limitPromotionalOffers = null;
            //int? limitOfferCodes = null;
            //int? limitPrices = null;
            //List<string>? include = null;
            //var response = instance.SubscriptionGroupsSubscriptionsGetToManyRelated(id, filterName, filterProductId, filterState, sort, fieldsPromotedPurchases, fieldsSubscriptionPromotionalOffers, fieldsSubscriptionOfferCodes, fieldsSubscriptionAppStoreReviewScreenshots, fieldsSubscriptions, fieldsSubscriptionGroups, fieldsSubscriptionIntroductoryOffers, fieldsSubscriptionPrices, fieldsSubscriptionLocalizations, limit, limitSubscriptionLocalizations, limitIntroductoryOffers, limitPromotionalOffers, limitOfferCodes, limitPrices, include);
            //Assert.IsType<SubscriptionsResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionGroupsUpdateInstance
        /// </summary>
        [Fact]
        public void SubscriptionGroupsUpdateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //SubscriptionGroupUpdateRequest subscriptionGroupUpdateRequest = null;
            //var response = instance.SubscriptionGroupsUpdateInstance(id, subscriptionGroupUpdateRequest);
            //Assert.IsType<SubscriptionGroupResponse>(response);
        }
    }
}
