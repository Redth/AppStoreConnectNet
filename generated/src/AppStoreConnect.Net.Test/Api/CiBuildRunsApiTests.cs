/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing CiBuildRunsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CiBuildRunsApiTests : IDisposable
    {
        private CiBuildRunsApi instance;

        public CiBuildRunsApiTests()
        {
            instance = new CiBuildRunsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CiBuildRunsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CiBuildRunsApi
            //Assert.IsType<CiBuildRunsApi>(instance);
        }

        /// <summary>
        /// Test CiBuildRunsActionsGetToManyRelated
        /// </summary>
        [Fact]
        public void CiBuildRunsActionsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsCiBuildRuns = null;
            //List<string>? fieldsCiBuildActions = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.CiBuildRunsActionsGetToManyRelated(id, fieldsCiBuildRuns, fieldsCiBuildActions, limit, include);
            //Assert.IsType<CiBuildActionsResponse>(response);
        }

        /// <summary>
        /// Test CiBuildRunsBuildsGetToManyRelated
        /// </summary>
        [Fact]
        public void CiBuildRunsBuildsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterBetaAppReviewSubmissionBetaReviewState = null;
            //List<string>? filterBuildAudienceType = null;
            //List<string>? filterExpired = null;
            //List<string>? filterPreReleaseVersionPlatform = null;
            //List<string>? filterPreReleaseVersionVersion = null;
            //List<string>? filterProcessingState = null;
            //List<string>? filterUsesNonExemptEncryption = null;
            //List<string>? filterVersion = null;
            //List<string>? filterApp = null;
            //List<string>? filterAppStoreVersion = null;
            //List<string>? filterBetaGroups = null;
            //List<string>? filterPreReleaseVersion = null;
            //List<string>? filterId = null;
            //List<string>? sort = null;
            //List<string>? fieldsBuildBundles = null;
            //List<string>? fieldsBuildIcons = null;
            //List<string>? fieldsBetaAppReviewSubmissions = null;
            //List<string>? fieldsBuildBetaDetails = null;
            //List<string>? fieldsBetaTesters = null;
            //List<string>? fieldsPreReleaseVersions = null;
            //List<string>? fieldsBetaBuildLocalizations = null;
            //List<string>? fieldsAppStoreVersions = null;
            //List<string>? fieldsAppEncryptionDeclarations = null;
            //List<string>? fieldsApps = null;
            //List<string>? fieldsBuilds = null;
            //List<string>? fieldsBetaGroups = null;
            //int? limit = null;
            //int? limitIndividualTesters = null;
            //int? limitBetaGroups = null;
            //int? limitBetaBuildLocalizations = null;
            //int? limitIcons = null;
            //int? limitBuildBundles = null;
            //List<string>? include = null;
            //var response = instance.CiBuildRunsBuildsGetToManyRelated(id, filterBetaAppReviewSubmissionBetaReviewState, filterBuildAudienceType, filterExpired, filterPreReleaseVersionPlatform, filterPreReleaseVersionVersion, filterProcessingState, filterUsesNonExemptEncryption, filterVersion, filterApp, filterAppStoreVersion, filterBetaGroups, filterPreReleaseVersion, filterId, sort, fieldsBuildBundles, fieldsBuildIcons, fieldsBetaAppReviewSubmissions, fieldsBuildBetaDetails, fieldsBetaTesters, fieldsPreReleaseVersions, fieldsBetaBuildLocalizations, fieldsAppStoreVersions, fieldsAppEncryptionDeclarations, fieldsApps, fieldsBuilds, fieldsBetaGroups, limit, limitIndividualTesters, limitBetaGroups, limitBetaBuildLocalizations, limitIcons, limitBuildBundles, include);
            //Assert.IsType<BuildsResponse>(response);
        }

        /// <summary>
        /// Test CiBuildRunsCreateInstance
        /// </summary>
        [Fact]
        public void CiBuildRunsCreateInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CiBuildRunCreateRequest ciBuildRunCreateRequest = null;
            //var response = instance.CiBuildRunsCreateInstance(ciBuildRunCreateRequest);
            //Assert.IsType<CiBuildRunResponse>(response);
        }

        /// <summary>
        /// Test CiBuildRunsGetInstance
        /// </summary>
        [Fact]
        public void CiBuildRunsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsCiBuildRuns = null;
            //List<string>? include = null;
            //List<string>? fieldsCiBuildActions = null;
            //List<string>? fieldsBuilds = null;
            //int? limitBuilds = null;
            //var response = instance.CiBuildRunsGetInstance(id, fieldsCiBuildRuns, include, fieldsCiBuildActions, fieldsBuilds, limitBuilds);
            //Assert.IsType<CiBuildRunResponse>(response);
        }
    }
}
