/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing AppEncryptionDeclarationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AppEncryptionDeclarationsApiTests : IDisposable
    {
        private AppEncryptionDeclarationsApi instance;

        public AppEncryptionDeclarationsApiTests()
        {
            instance = new AppEncryptionDeclarationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AppEncryptionDeclarationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AppEncryptionDeclarationsApi
            //Assert.IsType<AppEncryptionDeclarationsApi>(instance);
        }

        /// <summary>
        /// Test AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelated
        /// </summary>
        [Fact]
        public void AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsAppEncryptionDeclarationDocuments = null;
            //var response = instance.AppEncryptionDeclarationsAppEncryptionDeclarationDocumentGetToOneRelated(id, fieldsAppEncryptionDeclarationDocuments);
            //Assert.IsType<AppEncryptionDeclarationDocumentResponse>(response);
        }

        /// <summary>
        /// Test AppEncryptionDeclarationsAppGetToOneRelated
        /// </summary>
        [Fact]
        public void AppEncryptionDeclarationsAppGetToOneRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsApps = null;
            //var response = instance.AppEncryptionDeclarationsAppGetToOneRelated(id, fieldsApps);
            //Assert.IsType<AppResponse>(response);
        }

        /// <summary>
        /// Test AppEncryptionDeclarationsBuildsCreateToManyRelationship
        /// </summary>
        [Fact]
        public void AppEncryptionDeclarationsBuildsCreateToManyRelationshipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //AppEncryptionDeclarationBuildsLinkagesRequest appEncryptionDeclarationBuildsLinkagesRequest = null;
            //instance.AppEncryptionDeclarationsBuildsCreateToManyRelationship(id, appEncryptionDeclarationBuildsLinkagesRequest);
        }

        /// <summary>
        /// Test AppEncryptionDeclarationsGetCollection
        /// </summary>
        [Fact]
        public void AppEncryptionDeclarationsGetCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? filterPlatform = null;
            //List<string>? filterApp = null;
            //List<string>? filterBuilds = null;
            //List<string>? fieldsAppEncryptionDeclarations = null;
            //int? limit = null;
            //List<string>? include = null;
            //List<string>? fieldsAppEncryptionDeclarationDocuments = null;
            //List<string>? fieldsApps = null;
            //int? limitBuilds = null;
            //var response = instance.AppEncryptionDeclarationsGetCollection(filterPlatform, filterApp, filterBuilds, fieldsAppEncryptionDeclarations, limit, include, fieldsAppEncryptionDeclarationDocuments, fieldsApps, limitBuilds);
            //Assert.IsType<AppEncryptionDeclarationsResponse>(response);
        }

        /// <summary>
        /// Test AppEncryptionDeclarationsGetInstance
        /// </summary>
        [Fact]
        public void AppEncryptionDeclarationsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsAppEncryptionDeclarations = null;
            //List<string>? include = null;
            //List<string>? fieldsAppEncryptionDeclarationDocuments = null;
            //List<string>? fieldsApps = null;
            //int? limitBuilds = null;
            //var response = instance.AppEncryptionDeclarationsGetInstance(id, fieldsAppEncryptionDeclarations, include, fieldsAppEncryptionDeclarationDocuments, fieldsApps, limitBuilds);
            //Assert.IsType<AppEncryptionDeclarationResponse>(response);
        }
    }
}
