/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing SubscriptionPricePointsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SubscriptionPricePointsApiTests : IDisposable
    {
        private SubscriptionPricePointsApi instance;

        public SubscriptionPricePointsApiTests()
        {
            instance = new SubscriptionPricePointsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SubscriptionPricePointsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SubscriptionPricePointsApi
            //Assert.IsType<SubscriptionPricePointsApi>(instance);
        }

        /// <summary>
        /// Test SubscriptionPricePointsEqualizationsGetToManyRelated
        /// </summary>
        [Fact]
        public void SubscriptionPricePointsEqualizationsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterSubscription = null;
            //List<string>? filterTerritory = null;
            //List<string>? fieldsSubscriptionPricePoints = null;
            //List<string>? fieldsTerritories = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.SubscriptionPricePointsEqualizationsGetToManyRelated(id, filterSubscription, filterTerritory, fieldsSubscriptionPricePoints, fieldsTerritories, limit, include);
            //Assert.IsType<SubscriptionPricePointsResponse>(response);
        }

        /// <summary>
        /// Test SubscriptionPricePointsGetInstance
        /// </summary>
        [Fact]
        public void SubscriptionPricePointsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsSubscriptionPricePoints = null;
            //List<string>? include = null;
            //var response = instance.SubscriptionPricePointsGetInstance(id, fieldsSubscriptionPricePoints, include);
            //Assert.IsType<SubscriptionPricePointResponse>(response);
        }
    }
}
