/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using Xunit;

using AppStoreConnect.Client;
using AppStoreConnect.Api;
// uncomment below to import models
//using AppStoreConnect.Model;

namespace AppStoreConnect.Test.Api
{
    /// <summary>
    ///  Class for testing CiProductsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CiProductsApiTests : IDisposable
    {
        private CiProductsApi instance;

        public CiProductsApiTests()
        {
            instance = new CiProductsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CiProductsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CiProductsApi
            //Assert.IsType<CiProductsApi>(instance);
        }

        /// <summary>
        /// Test CiProductsAdditionalRepositoriesGetToManyRelated
        /// </summary>
        [Fact]
        public void CiProductsAdditionalRepositoriesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterId = null;
            //List<string>? fieldsScmGitReferences = null;
            //List<string>? fieldsScmProviders = null;
            //List<string>? fieldsScmRepositories = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.CiProductsAdditionalRepositoriesGetToManyRelated(id, filterId, fieldsScmGitReferences, fieldsScmProviders, fieldsScmRepositories, limit, include);
            //Assert.IsType<ScmRepositoriesResponse>(response);
        }

        /// <summary>
        /// Test CiProductsAppGetToOneRelated
        /// </summary>
        [Fact]
        public void CiProductsAppGetToOneRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsBetaLicenseAgreements = null;
            //List<string>? fieldsBetaAppReviewDetails = null;
            //List<string>? fieldsAppClips = null;
            //List<string>? fieldsBetaAppLocalizations = null;
            //List<string>? fieldsAppInfos = null;
            //List<string>? fieldsPreReleaseVersions = null;
            //List<string>? fieldsInAppPurchases = null;
            //List<string>? fieldsCiProducts = null;
            //List<string>? fieldsInAppPurchases2 = null;
            //List<string>? fieldsSubscriptionGroups = null;
            //List<string>? fieldsReviewSubmissions = null;
            //List<string>? fieldsBetaGroups = null;
            //List<string>? fieldsAppPreOrders = null;
            //List<string>? fieldsAppPrices = null;
            //List<string>? fieldsGameCenterEnabledVersions = null;
            //List<string>? fieldsSubscriptionGracePeriods = null;
            //List<string>? fieldsPromotedPurchases = null;
            //List<string>? fieldsEndUserLicenseAgreements = null;
            //List<string>? fieldsAppStoreVersions = null;
            //List<string>? fieldsAppCustomProductPages = null;
            //List<string>? fieldsApps = null;
            //List<string>? fieldsAppEvents = null;
            //List<string>? fieldsTerritories = null;
            //List<string>? fieldsBuilds = null;
            //int? limitBetaGroups = null;
            //int? limitAppStoreVersions = null;
            //int? limitPreReleaseVersions = null;
            //int? limitBetaAppLocalizations = null;
            //int? limitBuilds = null;
            //int? limitAppInfos = null;
            //int? limitAppClips = null;
            //int? limitPrices = null;
            //int? limitAvailableTerritories = null;
            //int? limitInAppPurchases = null;
            //int? limitSubscriptionGroups = null;
            //int? limitGameCenterEnabledVersions = null;
            //int? limitAppCustomProductPages = null;
            //int? limitInAppPurchasesV2 = null;
            //int? limitPromotedPurchases = null;
            //int? limitAppEvents = null;
            //int? limitReviewSubmissions = null;
            //List<string>? include = null;
            //var response = instance.CiProductsAppGetToOneRelated(id, fieldsBetaLicenseAgreements, fieldsBetaAppReviewDetails, fieldsAppClips, fieldsBetaAppLocalizations, fieldsAppInfos, fieldsPreReleaseVersions, fieldsInAppPurchases, fieldsCiProducts, fieldsInAppPurchases2, fieldsSubscriptionGroups, fieldsReviewSubmissions, fieldsBetaGroups, fieldsAppPreOrders, fieldsAppPrices, fieldsGameCenterEnabledVersions, fieldsSubscriptionGracePeriods, fieldsPromotedPurchases, fieldsEndUserLicenseAgreements, fieldsAppStoreVersions, fieldsAppCustomProductPages, fieldsApps, fieldsAppEvents, fieldsTerritories, fieldsBuilds, limitBetaGroups, limitAppStoreVersions, limitPreReleaseVersions, limitBetaAppLocalizations, limitBuilds, limitAppInfos, limitAppClips, limitPrices, limitAvailableTerritories, limitInAppPurchases, limitSubscriptionGroups, limitGameCenterEnabledVersions, limitAppCustomProductPages, limitInAppPurchasesV2, limitPromotedPurchases, limitAppEvents, limitReviewSubmissions, include);
            //Assert.IsType<AppResponse>(response);
        }

        /// <summary>
        /// Test CiProductsBuildRunsGetToManyRelated
        /// </summary>
        [Fact]
        public void CiProductsBuildRunsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterBuilds = null;
            //List<string>? fieldsScmGitReferences = null;
            //List<string>? fieldsCiBuildRuns = null;
            //List<string>? fieldsCiWorkflows = null;
            //List<string>? fieldsScmPullRequests = null;
            //List<string>? fieldsCiProducts = null;
            //List<string>? fieldsBuilds = null;
            //int? limit = null;
            //int? limitBuilds = null;
            //List<string>? include = null;
            //var response = instance.CiProductsBuildRunsGetToManyRelated(id, filterBuilds, fieldsScmGitReferences, fieldsCiBuildRuns, fieldsCiWorkflows, fieldsScmPullRequests, fieldsCiProducts, fieldsBuilds, limit, limitBuilds, include);
            //Assert.IsType<CiBuildRunsResponse>(response);
        }

        /// <summary>
        /// Test CiProductsDeleteInstance
        /// </summary>
        [Fact]
        public void CiProductsDeleteInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.CiProductsDeleteInstance(id);
        }

        /// <summary>
        /// Test CiProductsGetCollection
        /// </summary>
        [Fact]
        public void CiProductsGetCollectionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string>? filterProductType = null;
            //List<string>? filterApp = null;
            //List<string>? fieldsCiProducts = null;
            //int? limit = null;
            //List<string>? include = null;
            //List<string>? fieldsCiBuildRuns = null;
            //List<string>? fieldsCiWorkflows = null;
            //List<string>? fieldsApps = null;
            //List<string>? fieldsScmRepositories = null;
            //int? limitPrimaryRepositories = null;
            //var response = instance.CiProductsGetCollection(filterProductType, filterApp, fieldsCiProducts, limit, include, fieldsCiBuildRuns, fieldsCiWorkflows, fieldsApps, fieldsScmRepositories, limitPrimaryRepositories);
            //Assert.IsType<CiProductsResponse>(response);
        }

        /// <summary>
        /// Test CiProductsGetInstance
        /// </summary>
        [Fact]
        public void CiProductsGetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsCiProducts = null;
            //List<string>? include = null;
            //List<string>? fieldsCiBuildRuns = null;
            //List<string>? fieldsCiWorkflows = null;
            //List<string>? fieldsApps = null;
            //List<string>? fieldsScmRepositories = null;
            //int? limitPrimaryRepositories = null;
            //var response = instance.CiProductsGetInstance(id, fieldsCiProducts, include, fieldsCiBuildRuns, fieldsCiWorkflows, fieldsApps, fieldsScmRepositories, limitPrimaryRepositories);
            //Assert.IsType<CiProductResponse>(response);
        }

        /// <summary>
        /// Test CiProductsPrimaryRepositoriesGetToManyRelated
        /// </summary>
        [Fact]
        public void CiProductsPrimaryRepositoriesGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? filterId = null;
            //List<string>? fieldsScmGitReferences = null;
            //List<string>? fieldsScmProviders = null;
            //List<string>? fieldsScmRepositories = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.CiProductsPrimaryRepositoriesGetToManyRelated(id, filterId, fieldsScmGitReferences, fieldsScmProviders, fieldsScmRepositories, limit, include);
            //Assert.IsType<ScmRepositoriesResponse>(response);
        }

        /// <summary>
        /// Test CiProductsWorkflowsGetToManyRelated
        /// </summary>
        [Fact]
        public void CiProductsWorkflowsGetToManyRelatedTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //List<string>? fieldsCiXcodeVersions = null;
            //List<string>? fieldsCiWorkflows = null;
            //List<string>? fieldsCiMacOsVersions = null;
            //List<string>? fieldsCiProducts = null;
            //List<string>? fieldsScmRepositories = null;
            //int? limit = null;
            //List<string>? include = null;
            //var response = instance.CiProductsWorkflowsGetToManyRelated(id, fieldsCiXcodeVersions, fieldsCiWorkflows, fieldsCiMacOsVersions, fieldsCiProducts, fieldsScmRepositories, limit, include);
            //Assert.IsType<CiWorkflowsResponse>(response);
        }
    }
}
