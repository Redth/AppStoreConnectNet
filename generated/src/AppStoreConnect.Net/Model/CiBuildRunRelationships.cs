/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Model
{
    /// <summary>
    /// CiBuildRunRelationships
    /// </summary>
    [DataContract(Name = "CiBuildRun_relationships")]
    public partial class CiBuildRunRelationships : IEquatable<CiBuildRunRelationships>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CiBuildRunRelationships" /> class.
        /// </summary>
        /// <param name="builds">builds.</param>
        /// <param name="workflow">workflow.</param>
        /// <param name="product">product.</param>
        /// <param name="sourceBranchOrTag">sourceBranchOrTag.</param>
        /// <param name="destinationBranch">destinationBranch.</param>
        /// <param name="pullRequest">pullRequest.</param>
        public CiBuildRunRelationships(AppEncryptionDeclarationRelationshipsBuilds builds = default(AppEncryptionDeclarationRelationshipsBuilds), CiBuildRunRelationshipsWorkflow workflow = default(CiBuildRunRelationshipsWorkflow), AppRelationshipsCiProduct product = default(AppRelationshipsCiProduct), CiBuildRunRelationshipsSourceBranchOrTag sourceBranchOrTag = default(CiBuildRunRelationshipsSourceBranchOrTag), CiBuildRunRelationshipsSourceBranchOrTag destinationBranch = default(CiBuildRunRelationshipsSourceBranchOrTag), CiBuildRunRelationshipsPullRequest pullRequest = default(CiBuildRunRelationshipsPullRequest))
        {
            this.Builds = builds;
            this.Workflow = workflow;
            this.Product = product;
            this.SourceBranchOrTag = sourceBranchOrTag;
            this.DestinationBranch = destinationBranch;
            this.PullRequest = pullRequest;
        }

        /// <summary>
        /// Gets or Sets Builds
        /// </summary>
        [DataMember(Name = "builds", EmitDefaultValue = false)]
        public AppEncryptionDeclarationRelationshipsBuilds Builds { get; set; }

        /// <summary>
        /// Gets or Sets Workflow
        /// </summary>
        [DataMember(Name = "workflow", EmitDefaultValue = false)]
        public CiBuildRunRelationshipsWorkflow Workflow { get; set; }

        /// <summary>
        /// Gets or Sets Product
        /// </summary>
        [DataMember(Name = "product", EmitDefaultValue = false)]
        public AppRelationshipsCiProduct Product { get; set; }

        /// <summary>
        /// Gets or Sets SourceBranchOrTag
        /// </summary>
        [DataMember(Name = "sourceBranchOrTag", EmitDefaultValue = false)]
        public CiBuildRunRelationshipsSourceBranchOrTag SourceBranchOrTag { get; set; }

        /// <summary>
        /// Gets or Sets DestinationBranch
        /// </summary>
        [DataMember(Name = "destinationBranch", EmitDefaultValue = false)]
        public CiBuildRunRelationshipsSourceBranchOrTag DestinationBranch { get; set; }

        /// <summary>
        /// Gets or Sets PullRequest
        /// </summary>
        [DataMember(Name = "pullRequest", EmitDefaultValue = false)]
        public CiBuildRunRelationshipsPullRequest PullRequest { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CiBuildRunRelationships {\n");
            sb.Append("  Builds: ").Append(Builds).Append("\n");
            sb.Append("  Workflow: ").Append(Workflow).Append("\n");
            sb.Append("  Product: ").Append(Product).Append("\n");
            sb.Append("  SourceBranchOrTag: ").Append(SourceBranchOrTag).Append("\n");
            sb.Append("  DestinationBranch: ").Append(DestinationBranch).Append("\n");
            sb.Append("  PullRequest: ").Append(PullRequest).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CiBuildRunRelationships);
        }

        /// <summary>
        /// Returns true if CiBuildRunRelationships instances are equal
        /// </summary>
        /// <param name="input">Instance of CiBuildRunRelationships to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CiBuildRunRelationships input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Builds == input.Builds ||
                    (this.Builds != null &&
                    this.Builds.Equals(input.Builds))
                ) && 
                (
                    this.Workflow == input.Workflow ||
                    (this.Workflow != null &&
                    this.Workflow.Equals(input.Workflow))
                ) && 
                (
                    this.Product == input.Product ||
                    (this.Product != null &&
                    this.Product.Equals(input.Product))
                ) && 
                (
                    this.SourceBranchOrTag == input.SourceBranchOrTag ||
                    (this.SourceBranchOrTag != null &&
                    this.SourceBranchOrTag.Equals(input.SourceBranchOrTag))
                ) && 
                (
                    this.DestinationBranch == input.DestinationBranch ||
                    (this.DestinationBranch != null &&
                    this.DestinationBranch.Equals(input.DestinationBranch))
                ) && 
                (
                    this.PullRequest == input.PullRequest ||
                    (this.PullRequest != null &&
                    this.PullRequest.Equals(input.PullRequest))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Builds != null)
                {
                    hashCode = (hashCode * 59) + this.Builds.GetHashCode();
                }
                if (this.Workflow != null)
                {
                    hashCode = (hashCode * 59) + this.Workflow.GetHashCode();
                }
                if (this.Product != null)
                {
                    hashCode = (hashCode * 59) + this.Product.GetHashCode();
                }
                if (this.SourceBranchOrTag != null)
                {
                    hashCode = (hashCode * 59) + this.SourceBranchOrTag.GetHashCode();
                }
                if (this.DestinationBranch != null)
                {
                    hashCode = (hashCode * 59) + this.DestinationBranch.GetHashCode();
                }
                if (this.PullRequest != null)
                {
                    hashCode = (hashCode * 59) + this.PullRequest.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
