/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Model
{
    /// <summary>
    /// AppRelationships
    /// </summary>
    [DataContract(Name = "App_relationships")]
    public partial class AppRelationships : IEquatable<AppRelationships>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppRelationships" /> class.
        /// </summary>
        /// <param name="ciProduct">ciProduct.</param>
        /// <param name="betaGroups">betaGroups.</param>
        /// <param name="appStoreVersions">appStoreVersions.</param>
        /// <param name="preReleaseVersions">preReleaseVersions.</param>
        /// <param name="betaAppLocalizations">betaAppLocalizations.</param>
        /// <param name="builds">builds.</param>
        /// <param name="betaLicenseAgreement">betaLicenseAgreement.</param>
        /// <param name="betaAppReviewDetail">betaAppReviewDetail.</param>
        /// <param name="appInfos">appInfos.</param>
        /// <param name="appClips">appClips.</param>
        /// <param name="endUserLicenseAgreement">endUserLicenseAgreement.</param>
        /// <param name="preOrder">preOrder.</param>
        /// <param name="prices">prices.</param>
        /// <param name="availableTerritories">availableTerritories.</param>
        /// <param name="inAppPurchases">inAppPurchases.</param>
        /// <param name="subscriptionGroups">subscriptionGroups.</param>
        /// <param name="gameCenterEnabledVersions">gameCenterEnabledVersions.</param>
        /// <param name="appCustomProductPages">appCustomProductPages.</param>
        /// <param name="inAppPurchasesV2">inAppPurchasesV2.</param>
        /// <param name="promotedPurchases">promotedPurchases.</param>
        /// <param name="appEvents">appEvents.</param>
        /// <param name="reviewSubmissions">reviewSubmissions.</param>
        /// <param name="subscriptionGracePeriod">subscriptionGracePeriod.</param>
        public AppRelationships(AppRelationshipsCiProduct ciProduct = default(AppRelationshipsCiProduct), AppRelationshipsBetaGroups betaGroups = default(AppRelationshipsBetaGroups), AppRelationshipsAppStoreVersions appStoreVersions = default(AppRelationshipsAppStoreVersions), AppRelationshipsPreReleaseVersions preReleaseVersions = default(AppRelationshipsPreReleaseVersions), AppRelationshipsBetaAppLocalizations betaAppLocalizations = default(AppRelationshipsBetaAppLocalizations), AppEncryptionDeclarationRelationshipsBuilds builds = default(AppEncryptionDeclarationRelationshipsBuilds), AppRelationshipsBetaLicenseAgreement betaLicenseAgreement = default(AppRelationshipsBetaLicenseAgreement), AppRelationshipsBetaAppReviewDetail betaAppReviewDetail = default(AppRelationshipsBetaAppReviewDetail), AppRelationshipsAppInfos appInfos = default(AppRelationshipsAppInfos), AppRelationshipsAppClips appClips = default(AppRelationshipsAppClips), AppRelationshipsEndUserLicenseAgreement endUserLicenseAgreement = default(AppRelationshipsEndUserLicenseAgreement), AppRelationshipsPreOrder preOrder = default(AppRelationshipsPreOrder), AppRelationshipsPrices prices = default(AppRelationshipsPrices), AppRelationshipsAvailableTerritories availableTerritories = default(AppRelationshipsAvailableTerritories), AppRelationshipsInAppPurchases inAppPurchases = default(AppRelationshipsInAppPurchases), AppRelationshipsSubscriptionGroups subscriptionGroups = default(AppRelationshipsSubscriptionGroups), AppRelationshipsGameCenterEnabledVersions gameCenterEnabledVersions = default(AppRelationshipsGameCenterEnabledVersions), AppRelationshipsAppCustomProductPages appCustomProductPages = default(AppRelationshipsAppCustomProductPages), AppRelationshipsInAppPurchasesV2 inAppPurchasesV2 = default(AppRelationshipsInAppPurchasesV2), AppRelationshipsPromotedPurchases promotedPurchases = default(AppRelationshipsPromotedPurchases), AppRelationshipsAppEvents appEvents = default(AppRelationshipsAppEvents), AppRelationshipsReviewSubmissions reviewSubmissions = default(AppRelationshipsReviewSubmissions), AppRelationshipsSubscriptionGracePeriod subscriptionGracePeriod = default(AppRelationshipsSubscriptionGracePeriod))
        {
            this.CiProduct = ciProduct;
            this.BetaGroups = betaGroups;
            this.AppStoreVersions = appStoreVersions;
            this.PreReleaseVersions = preReleaseVersions;
            this.BetaAppLocalizations = betaAppLocalizations;
            this.Builds = builds;
            this.BetaLicenseAgreement = betaLicenseAgreement;
            this.BetaAppReviewDetail = betaAppReviewDetail;
            this.AppInfos = appInfos;
            this.AppClips = appClips;
            this.EndUserLicenseAgreement = endUserLicenseAgreement;
            this.PreOrder = preOrder;
            this.Prices = prices;
            this.AvailableTerritories = availableTerritories;
            this.InAppPurchases = inAppPurchases;
            this.SubscriptionGroups = subscriptionGroups;
            this.GameCenterEnabledVersions = gameCenterEnabledVersions;
            this.AppCustomProductPages = appCustomProductPages;
            this.InAppPurchasesV2 = inAppPurchasesV2;
            this.PromotedPurchases = promotedPurchases;
            this.AppEvents = appEvents;
            this.ReviewSubmissions = reviewSubmissions;
            this.SubscriptionGracePeriod = subscriptionGracePeriod;
        }

        /// <summary>
        /// Gets or Sets CiProduct
        /// </summary>
        [DataMember(Name = "ciProduct", EmitDefaultValue = false)]
        public AppRelationshipsCiProduct CiProduct { get; set; }

        /// <summary>
        /// Gets or Sets BetaGroups
        /// </summary>
        [DataMember(Name = "betaGroups", EmitDefaultValue = false)]
        public AppRelationshipsBetaGroups BetaGroups { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreVersions
        /// </summary>
        [DataMember(Name = "appStoreVersions", EmitDefaultValue = false)]
        public AppRelationshipsAppStoreVersions AppStoreVersions { get; set; }

        /// <summary>
        /// Gets or Sets PreReleaseVersions
        /// </summary>
        [DataMember(Name = "preReleaseVersions", EmitDefaultValue = false)]
        public AppRelationshipsPreReleaseVersions PreReleaseVersions { get; set; }

        /// <summary>
        /// Gets or Sets BetaAppLocalizations
        /// </summary>
        [DataMember(Name = "betaAppLocalizations", EmitDefaultValue = false)]
        public AppRelationshipsBetaAppLocalizations BetaAppLocalizations { get; set; }

        /// <summary>
        /// Gets or Sets Builds
        /// </summary>
        [DataMember(Name = "builds", EmitDefaultValue = false)]
        public AppEncryptionDeclarationRelationshipsBuilds Builds { get; set; }

        /// <summary>
        /// Gets or Sets BetaLicenseAgreement
        /// </summary>
        [DataMember(Name = "betaLicenseAgreement", EmitDefaultValue = false)]
        public AppRelationshipsBetaLicenseAgreement BetaLicenseAgreement { get; set; }

        /// <summary>
        /// Gets or Sets BetaAppReviewDetail
        /// </summary>
        [DataMember(Name = "betaAppReviewDetail", EmitDefaultValue = false)]
        public AppRelationshipsBetaAppReviewDetail BetaAppReviewDetail { get; set; }

        /// <summary>
        /// Gets or Sets AppInfos
        /// </summary>
        [DataMember(Name = "appInfos", EmitDefaultValue = false)]
        public AppRelationshipsAppInfos AppInfos { get; set; }

        /// <summary>
        /// Gets or Sets AppClips
        /// </summary>
        [DataMember(Name = "appClips", EmitDefaultValue = false)]
        public AppRelationshipsAppClips AppClips { get; set; }

        /// <summary>
        /// Gets or Sets EndUserLicenseAgreement
        /// </summary>
        [DataMember(Name = "endUserLicenseAgreement", EmitDefaultValue = false)]
        public AppRelationshipsEndUserLicenseAgreement EndUserLicenseAgreement { get; set; }

        /// <summary>
        /// Gets or Sets PreOrder
        /// </summary>
        [DataMember(Name = "preOrder", EmitDefaultValue = false)]
        public AppRelationshipsPreOrder PreOrder { get; set; }

        /// <summary>
        /// Gets or Sets Prices
        /// </summary>
        [DataMember(Name = "prices", EmitDefaultValue = false)]
        [Obsolete]
        public AppRelationshipsPrices Prices { get; set; }

        /// <summary>
        /// Gets or Sets AvailableTerritories
        /// </summary>
        [DataMember(Name = "availableTerritories", EmitDefaultValue = false)]
        [Obsolete]
        public AppRelationshipsAvailableTerritories AvailableTerritories { get; set; }

        /// <summary>
        /// Gets or Sets InAppPurchases
        /// </summary>
        [DataMember(Name = "inAppPurchases", EmitDefaultValue = false)]
        [Obsolete]
        public AppRelationshipsInAppPurchases InAppPurchases { get; set; }

        /// <summary>
        /// Gets or Sets SubscriptionGroups
        /// </summary>
        [DataMember(Name = "subscriptionGroups", EmitDefaultValue = false)]
        public AppRelationshipsSubscriptionGroups SubscriptionGroups { get; set; }

        /// <summary>
        /// Gets or Sets GameCenterEnabledVersions
        /// </summary>
        [DataMember(Name = "gameCenterEnabledVersions", EmitDefaultValue = false)]
        public AppRelationshipsGameCenterEnabledVersions GameCenterEnabledVersions { get; set; }

        /// <summary>
        /// Gets or Sets AppCustomProductPages
        /// </summary>
        [DataMember(Name = "appCustomProductPages", EmitDefaultValue = false)]
        public AppRelationshipsAppCustomProductPages AppCustomProductPages { get; set; }

        /// <summary>
        /// Gets or Sets InAppPurchasesV2
        /// </summary>
        [DataMember(Name = "inAppPurchasesV2", EmitDefaultValue = false)]
        public AppRelationshipsInAppPurchasesV2 InAppPurchasesV2 { get; set; }

        /// <summary>
        /// Gets or Sets PromotedPurchases
        /// </summary>
        [DataMember(Name = "promotedPurchases", EmitDefaultValue = false)]
        public AppRelationshipsPromotedPurchases PromotedPurchases { get; set; }

        /// <summary>
        /// Gets or Sets AppEvents
        /// </summary>
        [DataMember(Name = "appEvents", EmitDefaultValue = false)]
        public AppRelationshipsAppEvents AppEvents { get; set; }

        /// <summary>
        /// Gets or Sets ReviewSubmissions
        /// </summary>
        [DataMember(Name = "reviewSubmissions", EmitDefaultValue = false)]
        public AppRelationshipsReviewSubmissions ReviewSubmissions { get; set; }

        /// <summary>
        /// Gets or Sets SubscriptionGracePeriod
        /// </summary>
        [DataMember(Name = "subscriptionGracePeriod", EmitDefaultValue = false)]
        public AppRelationshipsSubscriptionGracePeriod SubscriptionGracePeriod { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppRelationships {\n");
            sb.Append("  CiProduct: ").Append(CiProduct).Append("\n");
            sb.Append("  BetaGroups: ").Append(BetaGroups).Append("\n");
            sb.Append("  AppStoreVersions: ").Append(AppStoreVersions).Append("\n");
            sb.Append("  PreReleaseVersions: ").Append(PreReleaseVersions).Append("\n");
            sb.Append("  BetaAppLocalizations: ").Append(BetaAppLocalizations).Append("\n");
            sb.Append("  Builds: ").Append(Builds).Append("\n");
            sb.Append("  BetaLicenseAgreement: ").Append(BetaLicenseAgreement).Append("\n");
            sb.Append("  BetaAppReviewDetail: ").Append(BetaAppReviewDetail).Append("\n");
            sb.Append("  AppInfos: ").Append(AppInfos).Append("\n");
            sb.Append("  AppClips: ").Append(AppClips).Append("\n");
            sb.Append("  EndUserLicenseAgreement: ").Append(EndUserLicenseAgreement).Append("\n");
            sb.Append("  PreOrder: ").Append(PreOrder).Append("\n");
            sb.Append("  Prices: ").Append(Prices).Append("\n");
            sb.Append("  AvailableTerritories: ").Append(AvailableTerritories).Append("\n");
            sb.Append("  InAppPurchases: ").Append(InAppPurchases).Append("\n");
            sb.Append("  SubscriptionGroups: ").Append(SubscriptionGroups).Append("\n");
            sb.Append("  GameCenterEnabledVersions: ").Append(GameCenterEnabledVersions).Append("\n");
            sb.Append("  AppCustomProductPages: ").Append(AppCustomProductPages).Append("\n");
            sb.Append("  InAppPurchasesV2: ").Append(InAppPurchasesV2).Append("\n");
            sb.Append("  PromotedPurchases: ").Append(PromotedPurchases).Append("\n");
            sb.Append("  AppEvents: ").Append(AppEvents).Append("\n");
            sb.Append("  ReviewSubmissions: ").Append(ReviewSubmissions).Append("\n");
            sb.Append("  SubscriptionGracePeriod: ").Append(SubscriptionGracePeriod).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AppRelationships);
        }

        /// <summary>
        /// Returns true if AppRelationships instances are equal
        /// </summary>
        /// <param name="input">Instance of AppRelationships to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppRelationships input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CiProduct == input.CiProduct ||
                    (this.CiProduct != null &&
                    this.CiProduct.Equals(input.CiProduct))
                ) && 
                (
                    this.BetaGroups == input.BetaGroups ||
                    (this.BetaGroups != null &&
                    this.BetaGroups.Equals(input.BetaGroups))
                ) && 
                (
                    this.AppStoreVersions == input.AppStoreVersions ||
                    (this.AppStoreVersions != null &&
                    this.AppStoreVersions.Equals(input.AppStoreVersions))
                ) && 
                (
                    this.PreReleaseVersions == input.PreReleaseVersions ||
                    (this.PreReleaseVersions != null &&
                    this.PreReleaseVersions.Equals(input.PreReleaseVersions))
                ) && 
                (
                    this.BetaAppLocalizations == input.BetaAppLocalizations ||
                    (this.BetaAppLocalizations != null &&
                    this.BetaAppLocalizations.Equals(input.BetaAppLocalizations))
                ) && 
                (
                    this.Builds == input.Builds ||
                    (this.Builds != null &&
                    this.Builds.Equals(input.Builds))
                ) && 
                (
                    this.BetaLicenseAgreement == input.BetaLicenseAgreement ||
                    (this.BetaLicenseAgreement != null &&
                    this.BetaLicenseAgreement.Equals(input.BetaLicenseAgreement))
                ) && 
                (
                    this.BetaAppReviewDetail == input.BetaAppReviewDetail ||
                    (this.BetaAppReviewDetail != null &&
                    this.BetaAppReviewDetail.Equals(input.BetaAppReviewDetail))
                ) && 
                (
                    this.AppInfos == input.AppInfos ||
                    (this.AppInfos != null &&
                    this.AppInfos.Equals(input.AppInfos))
                ) && 
                (
                    this.AppClips == input.AppClips ||
                    (this.AppClips != null &&
                    this.AppClips.Equals(input.AppClips))
                ) && 
                (
                    this.EndUserLicenseAgreement == input.EndUserLicenseAgreement ||
                    (this.EndUserLicenseAgreement != null &&
                    this.EndUserLicenseAgreement.Equals(input.EndUserLicenseAgreement))
                ) && 
                (
                    this.PreOrder == input.PreOrder ||
                    (this.PreOrder != null &&
                    this.PreOrder.Equals(input.PreOrder))
                ) && 
                (
                    this.Prices == input.Prices ||
                    (this.Prices != null &&
                    this.Prices.Equals(input.Prices))
                ) && 
                (
                    this.AvailableTerritories == input.AvailableTerritories ||
                    (this.AvailableTerritories != null &&
                    this.AvailableTerritories.Equals(input.AvailableTerritories))
                ) && 
                (
                    this.InAppPurchases == input.InAppPurchases ||
                    (this.InAppPurchases != null &&
                    this.InAppPurchases.Equals(input.InAppPurchases))
                ) && 
                (
                    this.SubscriptionGroups == input.SubscriptionGroups ||
                    (this.SubscriptionGroups != null &&
                    this.SubscriptionGroups.Equals(input.SubscriptionGroups))
                ) && 
                (
                    this.GameCenterEnabledVersions == input.GameCenterEnabledVersions ||
                    (this.GameCenterEnabledVersions != null &&
                    this.GameCenterEnabledVersions.Equals(input.GameCenterEnabledVersions))
                ) && 
                (
                    this.AppCustomProductPages == input.AppCustomProductPages ||
                    (this.AppCustomProductPages != null &&
                    this.AppCustomProductPages.Equals(input.AppCustomProductPages))
                ) && 
                (
                    this.InAppPurchasesV2 == input.InAppPurchasesV2 ||
                    (this.InAppPurchasesV2 != null &&
                    this.InAppPurchasesV2.Equals(input.InAppPurchasesV2))
                ) && 
                (
                    this.PromotedPurchases == input.PromotedPurchases ||
                    (this.PromotedPurchases != null &&
                    this.PromotedPurchases.Equals(input.PromotedPurchases))
                ) && 
                (
                    this.AppEvents == input.AppEvents ||
                    (this.AppEvents != null &&
                    this.AppEvents.Equals(input.AppEvents))
                ) && 
                (
                    this.ReviewSubmissions == input.ReviewSubmissions ||
                    (this.ReviewSubmissions != null &&
                    this.ReviewSubmissions.Equals(input.ReviewSubmissions))
                ) && 
                (
                    this.SubscriptionGracePeriod == input.SubscriptionGracePeriod ||
                    (this.SubscriptionGracePeriod != null &&
                    this.SubscriptionGracePeriod.Equals(input.SubscriptionGracePeriod))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CiProduct != null)
                {
                    hashCode = (hashCode * 59) + this.CiProduct.GetHashCode();
                }
                if (this.BetaGroups != null)
                {
                    hashCode = (hashCode * 59) + this.BetaGroups.GetHashCode();
                }
                if (this.AppStoreVersions != null)
                {
                    hashCode = (hashCode * 59) + this.AppStoreVersions.GetHashCode();
                }
                if (this.PreReleaseVersions != null)
                {
                    hashCode = (hashCode * 59) + this.PreReleaseVersions.GetHashCode();
                }
                if (this.BetaAppLocalizations != null)
                {
                    hashCode = (hashCode * 59) + this.BetaAppLocalizations.GetHashCode();
                }
                if (this.Builds != null)
                {
                    hashCode = (hashCode * 59) + this.Builds.GetHashCode();
                }
                if (this.BetaLicenseAgreement != null)
                {
                    hashCode = (hashCode * 59) + this.BetaLicenseAgreement.GetHashCode();
                }
                if (this.BetaAppReviewDetail != null)
                {
                    hashCode = (hashCode * 59) + this.BetaAppReviewDetail.GetHashCode();
                }
                if (this.AppInfos != null)
                {
                    hashCode = (hashCode * 59) + this.AppInfos.GetHashCode();
                }
                if (this.AppClips != null)
                {
                    hashCode = (hashCode * 59) + this.AppClips.GetHashCode();
                }
                if (this.EndUserLicenseAgreement != null)
                {
                    hashCode = (hashCode * 59) + this.EndUserLicenseAgreement.GetHashCode();
                }
                if (this.PreOrder != null)
                {
                    hashCode = (hashCode * 59) + this.PreOrder.GetHashCode();
                }
                if (this.Prices != null)
                {
                    hashCode = (hashCode * 59) + this.Prices.GetHashCode();
                }
                if (this.AvailableTerritories != null)
                {
                    hashCode = (hashCode * 59) + this.AvailableTerritories.GetHashCode();
                }
                if (this.InAppPurchases != null)
                {
                    hashCode = (hashCode * 59) + this.InAppPurchases.GetHashCode();
                }
                if (this.SubscriptionGroups != null)
                {
                    hashCode = (hashCode * 59) + this.SubscriptionGroups.GetHashCode();
                }
                if (this.GameCenterEnabledVersions != null)
                {
                    hashCode = (hashCode * 59) + this.GameCenterEnabledVersions.GetHashCode();
                }
                if (this.AppCustomProductPages != null)
                {
                    hashCode = (hashCode * 59) + this.AppCustomProductPages.GetHashCode();
                }
                if (this.InAppPurchasesV2 != null)
                {
                    hashCode = (hashCode * 59) + this.InAppPurchasesV2.GetHashCode();
                }
                if (this.PromotedPurchases != null)
                {
                    hashCode = (hashCode * 59) + this.PromotedPurchases.GetHashCode();
                }
                if (this.AppEvents != null)
                {
                    hashCode = (hashCode * 59) + this.AppEvents.GetHashCode();
                }
                if (this.ReviewSubmissions != null)
                {
                    hashCode = (hashCode * 59) + this.ReviewSubmissions.GetHashCode();
                }
                if (this.SubscriptionGracePeriod != null)
                {
                    hashCode = (hashCode * 59) + this.SubscriptionGracePeriod.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
