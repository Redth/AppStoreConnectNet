/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Model
{
    /// <summary>
    /// BundleIdCapabilityCreateRequestDataAttributes
    /// </summary>
    [DataContract(Name = "BundleIdCapabilityCreateRequest_data_attributes")]
    public partial class BundleIdCapabilityCreateRequestDataAttributes : IEquatable<BundleIdCapabilityCreateRequestDataAttributes>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets CapabilityType
        /// </summary>
        [DataMember(Name = "capabilityType", IsRequired = true, EmitDefaultValue = true)]
        public CapabilityType CapabilityType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="BundleIdCapabilityCreateRequestDataAttributes" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BundleIdCapabilityCreateRequestDataAttributes() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BundleIdCapabilityCreateRequestDataAttributes" /> class.
        /// </summary>
        /// <param name="capabilityType">capabilityType (required).</param>
        /// <param name="settings">settings.</param>
        public BundleIdCapabilityCreateRequestDataAttributes(CapabilityType capabilityType = default(CapabilityType), List<CapabilitySetting> settings = default(List<CapabilitySetting>))
        {
            this.CapabilityType = capabilityType;
            this.Settings = settings;
        }

        /// <summary>
        /// Gets or Sets Settings
        /// </summary>
        [DataMember(Name = "settings", EmitDefaultValue = false)]
        public List<CapabilitySetting> Settings { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BundleIdCapabilityCreateRequestDataAttributes {\n");
            sb.Append("  CapabilityType: ").Append(CapabilityType).Append("\n");
            sb.Append("  Settings: ").Append(Settings).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BundleIdCapabilityCreateRequestDataAttributes);
        }

        /// <summary>
        /// Returns true if BundleIdCapabilityCreateRequestDataAttributes instances are equal
        /// </summary>
        /// <param name="input">Instance of BundleIdCapabilityCreateRequestDataAttributes to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BundleIdCapabilityCreateRequestDataAttributes input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CapabilityType == input.CapabilityType ||
                    this.CapabilityType.Equals(input.CapabilityType)
                ) && 
                (
                    this.Settings == input.Settings ||
                    this.Settings != null &&
                    input.Settings != null &&
                    this.Settings.SequenceEqual(input.Settings)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = (hashCode * 59) + this.CapabilityType.GetHashCode();
                if (this.Settings != null)
                {
                    hashCode = (hashCode * 59) + this.Settings.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
