/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Model
{
    /// <summary>
    /// BetaBuildLocalizationCreateRequestDataAttributes
    /// </summary>
    [DataContract(Name = "BetaBuildLocalizationCreateRequest_data_attributes")]
    public partial class BetaBuildLocalizationCreateRequestDataAttributes : IEquatable<BetaBuildLocalizationCreateRequestDataAttributes>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BetaBuildLocalizationCreateRequestDataAttributes" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected BetaBuildLocalizationCreateRequestDataAttributes() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="BetaBuildLocalizationCreateRequestDataAttributes" /> class.
        /// </summary>
        /// <param name="whatsNew">whatsNew.</param>
        /// <param name="locale">locale (required).</param>
        public BetaBuildLocalizationCreateRequestDataAttributes(string whatsNew = default(string), string locale = default(string))
        {
            // to ensure "locale" is required (not null)
            if (locale == null)
            {
                throw new ArgumentNullException("locale is a required property for BetaBuildLocalizationCreateRequestDataAttributes and cannot be null");
            }
            this.Locale = locale;
            this.WhatsNew = whatsNew;
        }

        /// <summary>
        /// Gets or Sets WhatsNew
        /// </summary>
        [DataMember(Name = "whatsNew", EmitDefaultValue = false)]
        public string WhatsNew { get; set; }

        /// <summary>
        /// Gets or Sets Locale
        /// </summary>
        [DataMember(Name = "locale", IsRequired = true, EmitDefaultValue = true)]
        public string Locale { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BetaBuildLocalizationCreateRequestDataAttributes {\n");
            sb.Append("  WhatsNew: ").Append(WhatsNew).Append("\n");
            sb.Append("  Locale: ").Append(Locale).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BetaBuildLocalizationCreateRequestDataAttributes);
        }

        /// <summary>
        /// Returns true if BetaBuildLocalizationCreateRequestDataAttributes instances are equal
        /// </summary>
        /// <param name="input">Instance of BetaBuildLocalizationCreateRequestDataAttributes to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BetaBuildLocalizationCreateRequestDataAttributes input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.WhatsNew == input.WhatsNew ||
                    (this.WhatsNew != null &&
                    this.WhatsNew.Equals(input.WhatsNew))
                ) && 
                (
                    this.Locale == input.Locale ||
                    (this.Locale != null &&
                    this.Locale.Equals(input.Locale))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.WhatsNew != null)
                {
                    hashCode = (hashCode * 59) + this.WhatsNew.GetHashCode();
                }
                if (this.Locale != null)
                {
                    hashCode = (hashCode * 59) + this.Locale.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
