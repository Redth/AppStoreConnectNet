/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Model
{
    /// <summary>
    /// AppStoreVersionExperimentTreatmentRelationships
    /// </summary>
    [DataContract(Name = "AppStoreVersionExperimentTreatment_relationships")]
    public partial class AppStoreVersionExperimentTreatmentRelationships : IEquatable<AppStoreVersionExperimentTreatmentRelationships>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppStoreVersionExperimentTreatmentRelationships" /> class.
        /// </summary>
        /// <param name="appStoreVersionExperiment">appStoreVersionExperiment.</param>
        /// <param name="appStoreVersionExperimentTreatmentLocalizations">appStoreVersionExperimentTreatmentLocalizations.</param>
        public AppStoreVersionExperimentTreatmentRelationships(AppStoreVersionExperimentTreatmentRelationshipsAppStoreVersionExperiment appStoreVersionExperiment = default(AppStoreVersionExperimentTreatmentRelationshipsAppStoreVersionExperiment), AppStoreVersionExperimentTreatmentRelationshipsAppStoreVersionExperimentTreatmentLocalizations appStoreVersionExperimentTreatmentLocalizations = default(AppStoreVersionExperimentTreatmentRelationshipsAppStoreVersionExperimentTreatmentLocalizations))
        {
            this.AppStoreVersionExperiment = appStoreVersionExperiment;
            this.AppStoreVersionExperimentTreatmentLocalizations = appStoreVersionExperimentTreatmentLocalizations;
        }

        /// <summary>
        /// Gets or Sets AppStoreVersionExperiment
        /// </summary>
        [DataMember(Name = "appStoreVersionExperiment", EmitDefaultValue = false)]
        public AppStoreVersionExperimentTreatmentRelationshipsAppStoreVersionExperiment AppStoreVersionExperiment { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreVersionExperimentTreatmentLocalizations
        /// </summary>
        [DataMember(Name = "appStoreVersionExperimentTreatmentLocalizations", EmitDefaultValue = false)]
        public AppStoreVersionExperimentTreatmentRelationshipsAppStoreVersionExperimentTreatmentLocalizations AppStoreVersionExperimentTreatmentLocalizations { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppStoreVersionExperimentTreatmentRelationships {\n");
            sb.Append("  AppStoreVersionExperiment: ").Append(AppStoreVersionExperiment).Append("\n");
            sb.Append("  AppStoreVersionExperimentTreatmentLocalizations: ").Append(AppStoreVersionExperimentTreatmentLocalizations).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AppStoreVersionExperimentTreatmentRelationships);
        }

        /// <summary>
        /// Returns true if AppStoreVersionExperimentTreatmentRelationships instances are equal
        /// </summary>
        /// <param name="input">Instance of AppStoreVersionExperimentTreatmentRelationships to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppStoreVersionExperimentTreatmentRelationships input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AppStoreVersionExperiment == input.AppStoreVersionExperiment ||
                    (this.AppStoreVersionExperiment != null &&
                    this.AppStoreVersionExperiment.Equals(input.AppStoreVersionExperiment))
                ) && 
                (
                    this.AppStoreVersionExperimentTreatmentLocalizations == input.AppStoreVersionExperimentTreatmentLocalizations ||
                    (this.AppStoreVersionExperimentTreatmentLocalizations != null &&
                    this.AppStoreVersionExperimentTreatmentLocalizations.Equals(input.AppStoreVersionExperimentTreatmentLocalizations))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AppStoreVersionExperiment != null)
                {
                    hashCode = (hashCode * 59) + this.AppStoreVersionExperiment.GetHashCode();
                }
                if (this.AppStoreVersionExperimentTreatmentLocalizations != null)
                {
                    hashCode = (hashCode * 59) + this.AppStoreVersionExperimentTreatmentLocalizations.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
