/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Model
{
    /// <summary>
    /// SubscriptionRelationships
    /// </summary>
    [DataContract(Name = "Subscription_relationships")]
    public partial class SubscriptionRelationships : IEquatable<SubscriptionRelationships>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SubscriptionRelationships" /> class.
        /// </summary>
        /// <param name="subscriptionLocalizations">subscriptionLocalizations.</param>
        /// <param name="appStoreReviewScreenshot">appStoreReviewScreenshot.</param>
        /// <param name="group">group.</param>
        /// <param name="introductoryOffers">introductoryOffers.</param>
        /// <param name="promotionalOffers">promotionalOffers.</param>
        /// <param name="offerCodes">offerCodes.</param>
        /// <param name="prices">prices.</param>
        /// <param name="promotedPurchase">promotedPurchase.</param>
        public SubscriptionRelationships(SubscriptionRelationshipsSubscriptionLocalizations subscriptionLocalizations = default(SubscriptionRelationshipsSubscriptionLocalizations), SubscriptionRelationshipsAppStoreReviewScreenshot appStoreReviewScreenshot = default(SubscriptionRelationshipsAppStoreReviewScreenshot), SubscriptionGroupLocalizationRelationshipsSubscriptionGroup group = default(SubscriptionGroupLocalizationRelationshipsSubscriptionGroup), SubscriptionRelationshipsIntroductoryOffers introductoryOffers = default(SubscriptionRelationshipsIntroductoryOffers), SubscriptionRelationshipsPromotionalOffers promotionalOffers = default(SubscriptionRelationshipsPromotionalOffers), SubscriptionRelationshipsOfferCodes offerCodes = default(SubscriptionRelationshipsOfferCodes), SubscriptionRelationshipsPrices prices = default(SubscriptionRelationshipsPrices), InAppPurchaseV2RelationshipsPromotedPurchase promotedPurchase = default(InAppPurchaseV2RelationshipsPromotedPurchase))
        {
            this.SubscriptionLocalizations = subscriptionLocalizations;
            this.AppStoreReviewScreenshot = appStoreReviewScreenshot;
            this.Group = group;
            this.IntroductoryOffers = introductoryOffers;
            this.PromotionalOffers = promotionalOffers;
            this.OfferCodes = offerCodes;
            this.Prices = prices;
            this.PromotedPurchase = promotedPurchase;
        }

        /// <summary>
        /// Gets or Sets SubscriptionLocalizations
        /// </summary>
        [DataMember(Name = "subscriptionLocalizations", EmitDefaultValue = false)]
        public SubscriptionRelationshipsSubscriptionLocalizations SubscriptionLocalizations { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreReviewScreenshot
        /// </summary>
        [DataMember(Name = "appStoreReviewScreenshot", EmitDefaultValue = false)]
        public SubscriptionRelationshipsAppStoreReviewScreenshot AppStoreReviewScreenshot { get; set; }

        /// <summary>
        /// Gets or Sets Group
        /// </summary>
        [DataMember(Name = "group", EmitDefaultValue = false)]
        public SubscriptionGroupLocalizationRelationshipsSubscriptionGroup Group { get; set; }

        /// <summary>
        /// Gets or Sets IntroductoryOffers
        /// </summary>
        [DataMember(Name = "introductoryOffers", EmitDefaultValue = false)]
        public SubscriptionRelationshipsIntroductoryOffers IntroductoryOffers { get; set; }

        /// <summary>
        /// Gets or Sets PromotionalOffers
        /// </summary>
        [DataMember(Name = "promotionalOffers", EmitDefaultValue = false)]
        public SubscriptionRelationshipsPromotionalOffers PromotionalOffers { get; set; }

        /// <summary>
        /// Gets or Sets OfferCodes
        /// </summary>
        [DataMember(Name = "offerCodes", EmitDefaultValue = false)]
        public SubscriptionRelationshipsOfferCodes OfferCodes { get; set; }

        /// <summary>
        /// Gets or Sets Prices
        /// </summary>
        [DataMember(Name = "prices", EmitDefaultValue = false)]
        public SubscriptionRelationshipsPrices Prices { get; set; }

        /// <summary>
        /// Gets or Sets PromotedPurchase
        /// </summary>
        [DataMember(Name = "promotedPurchase", EmitDefaultValue = false)]
        public InAppPurchaseV2RelationshipsPromotedPurchase PromotedPurchase { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SubscriptionRelationships {\n");
            sb.Append("  SubscriptionLocalizations: ").Append(SubscriptionLocalizations).Append("\n");
            sb.Append("  AppStoreReviewScreenshot: ").Append(AppStoreReviewScreenshot).Append("\n");
            sb.Append("  Group: ").Append(Group).Append("\n");
            sb.Append("  IntroductoryOffers: ").Append(IntroductoryOffers).Append("\n");
            sb.Append("  PromotionalOffers: ").Append(PromotionalOffers).Append("\n");
            sb.Append("  OfferCodes: ").Append(OfferCodes).Append("\n");
            sb.Append("  Prices: ").Append(Prices).Append("\n");
            sb.Append("  PromotedPurchase: ").Append(PromotedPurchase).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SubscriptionRelationships);
        }

        /// <summary>
        /// Returns true if SubscriptionRelationships instances are equal
        /// </summary>
        /// <param name="input">Instance of SubscriptionRelationships to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SubscriptionRelationships input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.SubscriptionLocalizations == input.SubscriptionLocalizations ||
                    (this.SubscriptionLocalizations != null &&
                    this.SubscriptionLocalizations.Equals(input.SubscriptionLocalizations))
                ) && 
                (
                    this.AppStoreReviewScreenshot == input.AppStoreReviewScreenshot ||
                    (this.AppStoreReviewScreenshot != null &&
                    this.AppStoreReviewScreenshot.Equals(input.AppStoreReviewScreenshot))
                ) && 
                (
                    this.Group == input.Group ||
                    (this.Group != null &&
                    this.Group.Equals(input.Group))
                ) && 
                (
                    this.IntroductoryOffers == input.IntroductoryOffers ||
                    (this.IntroductoryOffers != null &&
                    this.IntroductoryOffers.Equals(input.IntroductoryOffers))
                ) && 
                (
                    this.PromotionalOffers == input.PromotionalOffers ||
                    (this.PromotionalOffers != null &&
                    this.PromotionalOffers.Equals(input.PromotionalOffers))
                ) && 
                (
                    this.OfferCodes == input.OfferCodes ||
                    (this.OfferCodes != null &&
                    this.OfferCodes.Equals(input.OfferCodes))
                ) && 
                (
                    this.Prices == input.Prices ||
                    (this.Prices != null &&
                    this.Prices.Equals(input.Prices))
                ) && 
                (
                    this.PromotedPurchase == input.PromotedPurchase ||
                    (this.PromotedPurchase != null &&
                    this.PromotedPurchase.Equals(input.PromotedPurchase))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SubscriptionLocalizations != null)
                {
                    hashCode = (hashCode * 59) + this.SubscriptionLocalizations.GetHashCode();
                }
                if (this.AppStoreReviewScreenshot != null)
                {
                    hashCode = (hashCode * 59) + this.AppStoreReviewScreenshot.GetHashCode();
                }
                if (this.Group != null)
                {
                    hashCode = (hashCode * 59) + this.Group.GetHashCode();
                }
                if (this.IntroductoryOffers != null)
                {
                    hashCode = (hashCode * 59) + this.IntroductoryOffers.GetHashCode();
                }
                if (this.PromotionalOffers != null)
                {
                    hashCode = (hashCode * 59) + this.PromotionalOffers.GetHashCode();
                }
                if (this.OfferCodes != null)
                {
                    hashCode = (hashCode * 59) + this.OfferCodes.GetHashCode();
                }
                if (this.Prices != null)
                {
                    hashCode = (hashCode * 59) + this.Prices.GetHashCode();
                }
                if (this.PromotedPurchase != null)
                {
                    hashCode = (hashCode * 59) + this.PromotedPurchase.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
