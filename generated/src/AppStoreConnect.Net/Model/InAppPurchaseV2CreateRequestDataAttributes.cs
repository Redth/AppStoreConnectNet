/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Model
{
    /// <summary>
    /// InAppPurchaseV2CreateRequestDataAttributes
    /// </summary>
    [DataContract(Name = "InAppPurchaseV2CreateRequest_data_attributes")]
    public partial class InAppPurchaseV2CreateRequestDataAttributes : IEquatable<InAppPurchaseV2CreateRequestDataAttributes>, IValidatableObject
    {

        /// <summary>
        /// Gets or Sets InAppPurchaseType
        /// </summary>
        [DataMember(Name = "inAppPurchaseType", IsRequired = true, EmitDefaultValue = true)]
        public InAppPurchaseType InAppPurchaseType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="InAppPurchaseV2CreateRequestDataAttributes" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected InAppPurchaseV2CreateRequestDataAttributes() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="InAppPurchaseV2CreateRequestDataAttributes" /> class.
        /// </summary>
        /// <param name="name">name (required).</param>
        /// <param name="productId">productId (required).</param>
        /// <param name="inAppPurchaseType">inAppPurchaseType (required).</param>
        /// <param name="reviewNote">reviewNote.</param>
        /// <param name="familySharable">familySharable.</param>
        /// <param name="availableInAllTerritories">availableInAllTerritories.</param>
        public InAppPurchaseV2CreateRequestDataAttributes(string name = default(string), string productId = default(string), InAppPurchaseType inAppPurchaseType = default(InAppPurchaseType), string reviewNote = default(string), bool familySharable = default(bool), bool availableInAllTerritories = default(bool))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for InAppPurchaseV2CreateRequestDataAttributes and cannot be null");
            }
            this.Name = name;
            // to ensure "productId" is required (not null)
            if (productId == null)
            {
                throw new ArgumentNullException("productId is a required property for InAppPurchaseV2CreateRequestDataAttributes and cannot be null");
            }
            this.ProductId = productId;
            this.InAppPurchaseType = inAppPurchaseType;
            this.ReviewNote = reviewNote;
            this.FamilySharable = familySharable;
            this.AvailableInAllTerritories = availableInAllTerritories;
        }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ProductId
        /// </summary>
        [DataMember(Name = "productId", IsRequired = true, EmitDefaultValue = true)]
        public string ProductId { get; set; }

        /// <summary>
        /// Gets or Sets ReviewNote
        /// </summary>
        [DataMember(Name = "reviewNote", EmitDefaultValue = false)]
        public string ReviewNote { get; set; }

        /// <summary>
        /// Gets or Sets FamilySharable
        /// </summary>
        [DataMember(Name = "familySharable", EmitDefaultValue = true)]
        public bool FamilySharable { get; set; }

        /// <summary>
        /// Gets or Sets AvailableInAllTerritories
        /// </summary>
        [DataMember(Name = "availableInAllTerritories", EmitDefaultValue = true)]
        public bool AvailableInAllTerritories { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InAppPurchaseV2CreateRequestDataAttributes {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ProductId: ").Append(ProductId).Append("\n");
            sb.Append("  InAppPurchaseType: ").Append(InAppPurchaseType).Append("\n");
            sb.Append("  ReviewNote: ").Append(ReviewNote).Append("\n");
            sb.Append("  FamilySharable: ").Append(FamilySharable).Append("\n");
            sb.Append("  AvailableInAllTerritories: ").Append(AvailableInAllTerritories).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InAppPurchaseV2CreateRequestDataAttributes);
        }

        /// <summary>
        /// Returns true if InAppPurchaseV2CreateRequestDataAttributes instances are equal
        /// </summary>
        /// <param name="input">Instance of InAppPurchaseV2CreateRequestDataAttributes to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InAppPurchaseV2CreateRequestDataAttributes input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.ProductId == input.ProductId ||
                    (this.ProductId != null &&
                    this.ProductId.Equals(input.ProductId))
                ) && 
                (
                    this.InAppPurchaseType == input.InAppPurchaseType ||
                    this.InAppPurchaseType.Equals(input.InAppPurchaseType)
                ) && 
                (
                    this.ReviewNote == input.ReviewNote ||
                    (this.ReviewNote != null &&
                    this.ReviewNote.Equals(input.ReviewNote))
                ) && 
                (
                    this.FamilySharable == input.FamilySharable ||
                    this.FamilySharable.Equals(input.FamilySharable)
                ) && 
                (
                    this.AvailableInAllTerritories == input.AvailableInAllTerritories ||
                    this.AvailableInAllTerritories.Equals(input.AvailableInAllTerritories)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.ProductId != null)
                {
                    hashCode = (hashCode * 59) + this.ProductId.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.InAppPurchaseType.GetHashCode();
                if (this.ReviewNote != null)
                {
                    hashCode = (hashCode * 59) + this.ReviewNote.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.FamilySharable.GetHashCode();
                hashCode = (hashCode * 59) + this.AvailableInAllTerritories.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
