/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Client.OpenAPIDateConverter;
using System.Reflection;

namespace AppStoreConnect.Model
{
    /// <summary>
    /// AppsResponseIncludedInner
    /// </summary>
    [JsonConverter(typeof(AppsResponseIncludedInnerJsonConverter))]
    [DataContract(Name = "AppsResponse_included_inner")]
    public partial class AppsResponseIncludedInner : AbstractOpenAPISchema, IEquatable<AppsResponseIncludedInner>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="CiProduct" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of CiProduct.</param>
        public AppsResponseIncludedInner(CiProduct actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="BetaGroup" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of BetaGroup.</param>
        public AppsResponseIncludedInner(BetaGroup actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="AppStoreVersion" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of AppStoreVersion.</param>
        public AppsResponseIncludedInner(AppStoreVersion actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="PrereleaseVersion" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of PrereleaseVersion.</param>
        public AppsResponseIncludedInner(PrereleaseVersion actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="BetaAppLocalization" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of BetaAppLocalization.</param>
        public AppsResponseIncludedInner(BetaAppLocalization actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="Build" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of Build.</param>
        public AppsResponseIncludedInner(Build actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="BetaLicenseAgreement" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of BetaLicenseAgreement.</param>
        public AppsResponseIncludedInner(BetaLicenseAgreement actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="BetaAppReviewDetail" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of BetaAppReviewDetail.</param>
        public AppsResponseIncludedInner(BetaAppReviewDetail actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="AppInfo" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of AppInfo.</param>
        public AppsResponseIncludedInner(AppInfo actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="AppClip" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of AppClip.</param>
        public AppsResponseIncludedInner(AppClip actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="EndUserLicenseAgreement" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of EndUserLicenseAgreement.</param>
        public AppsResponseIncludedInner(EndUserLicenseAgreement actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="AppPreOrder" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of AppPreOrder.</param>
        public AppsResponseIncludedInner(AppPreOrder actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="AppPrice" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of AppPrice.</param>
        public AppsResponseIncludedInner(AppPrice actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="Territory" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of Territory.</param>
        public AppsResponseIncludedInner(Territory actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="InAppPurchase" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of InAppPurchase.</param>
        public AppsResponseIncludedInner(InAppPurchase actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="SubscriptionGroup" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of SubscriptionGroup.</param>
        public AppsResponseIncludedInner(SubscriptionGroup actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="GameCenterEnabledVersion" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of GameCenterEnabledVersion.</param>
        public AppsResponseIncludedInner(GameCenterEnabledVersion actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="AppCustomProductPage" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of AppCustomProductPage.</param>
        public AppsResponseIncludedInner(AppCustomProductPage actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="InAppPurchaseV2" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of InAppPurchaseV2.</param>
        public AppsResponseIncludedInner(InAppPurchaseV2 actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="PromotedPurchase" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of PromotedPurchase.</param>
        public AppsResponseIncludedInner(PromotedPurchase actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="AppEvent" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of AppEvent.</param>
        public AppsResponseIncludedInner(AppEvent actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="ReviewSubmission" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of ReviewSubmission.</param>
        public AppsResponseIncludedInner(ReviewSubmission actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AppsResponseIncludedInner" /> class
        /// with the <see cref="SubscriptionGracePeriod" /> class
        /// </summary>
        /// <param name="actualInstance">An instance of SubscriptionGracePeriod.</param>
        public AppsResponseIncludedInner(SubscriptionGracePeriod actualInstance)
        {
            this.IsNullable = false;
            this.SchemaType= "oneOf";
            this.ActualInstance = actualInstance ?? throw new ArgumentException("Invalid instance found. Must not be null.");
        }


        private Object _actualInstance;

        /// <summary>
        /// Gets or Sets ActualInstance
        /// </summary>
        public override Object ActualInstance
        {
            get
            {
                return _actualInstance;
            }
            set
            {
                if (value.GetType() == typeof(AppClip))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(AppCustomProductPage))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(AppEvent))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(AppInfo))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(AppPreOrder))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(AppPrice))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(AppStoreVersion))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(BetaAppLocalization))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(BetaAppReviewDetail))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(BetaGroup))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(BetaLicenseAgreement))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(Build))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(CiProduct))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(EndUserLicenseAgreement))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(GameCenterEnabledVersion))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(InAppPurchase))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(InAppPurchaseV2))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(PrereleaseVersion))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(PromotedPurchase))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(ReviewSubmission))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(SubscriptionGracePeriod))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(SubscriptionGroup))
                {
                    this._actualInstance = value;
                }
                else if (value.GetType() == typeof(Territory))
                {
                    this._actualInstance = value;
                }
                else
                {
                    throw new ArgumentException("Invalid instance found. Must be the following types: AppClip, AppCustomProductPage, AppEvent, AppInfo, AppPreOrder, AppPrice, AppStoreVersion, BetaAppLocalization, BetaAppReviewDetail, BetaGroup, BetaLicenseAgreement, Build, CiProduct, EndUserLicenseAgreement, GameCenterEnabledVersion, InAppPurchase, InAppPurchaseV2, PrereleaseVersion, PromotedPurchase, ReviewSubmission, SubscriptionGracePeriod, SubscriptionGroup, Territory");
                }
            }
        }

        /// <summary>
        /// Get the actual instance of `CiProduct`. If the actual instance is not `CiProduct`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of CiProduct</returns>
        public CiProduct GetCiProduct()
        {
            return (CiProduct)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `BetaGroup`. If the actual instance is not `BetaGroup`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of BetaGroup</returns>
        public BetaGroup GetBetaGroup()
        {
            return (BetaGroup)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `AppStoreVersion`. If the actual instance is not `AppStoreVersion`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of AppStoreVersion</returns>
        public AppStoreVersion GetAppStoreVersion()
        {
            return (AppStoreVersion)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `PrereleaseVersion`. If the actual instance is not `PrereleaseVersion`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of PrereleaseVersion</returns>
        public PrereleaseVersion GetPrereleaseVersion()
        {
            return (PrereleaseVersion)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `BetaAppLocalization`. If the actual instance is not `BetaAppLocalization`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of BetaAppLocalization</returns>
        public BetaAppLocalization GetBetaAppLocalization()
        {
            return (BetaAppLocalization)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `Build`. If the actual instance is not `Build`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of Build</returns>
        public Build GetBuild()
        {
            return (Build)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `BetaLicenseAgreement`. If the actual instance is not `BetaLicenseAgreement`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of BetaLicenseAgreement</returns>
        public BetaLicenseAgreement GetBetaLicenseAgreement()
        {
            return (BetaLicenseAgreement)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `BetaAppReviewDetail`. If the actual instance is not `BetaAppReviewDetail`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of BetaAppReviewDetail</returns>
        public BetaAppReviewDetail GetBetaAppReviewDetail()
        {
            return (BetaAppReviewDetail)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `AppInfo`. If the actual instance is not `AppInfo`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of AppInfo</returns>
        public AppInfo GetAppInfo()
        {
            return (AppInfo)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `AppClip`. If the actual instance is not `AppClip`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of AppClip</returns>
        public AppClip GetAppClip()
        {
            return (AppClip)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `EndUserLicenseAgreement`. If the actual instance is not `EndUserLicenseAgreement`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of EndUserLicenseAgreement</returns>
        public EndUserLicenseAgreement GetEndUserLicenseAgreement()
        {
            return (EndUserLicenseAgreement)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `AppPreOrder`. If the actual instance is not `AppPreOrder`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of AppPreOrder</returns>
        public AppPreOrder GetAppPreOrder()
        {
            return (AppPreOrder)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `AppPrice`. If the actual instance is not `AppPrice`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of AppPrice</returns>
        public AppPrice GetAppPrice()
        {
            return (AppPrice)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `Territory`. If the actual instance is not `Territory`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of Territory</returns>
        public Territory GetTerritory()
        {
            return (Territory)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `InAppPurchase`. If the actual instance is not `InAppPurchase`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of InAppPurchase</returns>
        public InAppPurchase GetInAppPurchase()
        {
            return (InAppPurchase)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `SubscriptionGroup`. If the actual instance is not `SubscriptionGroup`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of SubscriptionGroup</returns>
        public SubscriptionGroup GetSubscriptionGroup()
        {
            return (SubscriptionGroup)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `GameCenterEnabledVersion`. If the actual instance is not `GameCenterEnabledVersion`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of GameCenterEnabledVersion</returns>
        public GameCenterEnabledVersion GetGameCenterEnabledVersion()
        {
            return (GameCenterEnabledVersion)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `AppCustomProductPage`. If the actual instance is not `AppCustomProductPage`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of AppCustomProductPage</returns>
        public AppCustomProductPage GetAppCustomProductPage()
        {
            return (AppCustomProductPage)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `InAppPurchaseV2`. If the actual instance is not `InAppPurchaseV2`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of InAppPurchaseV2</returns>
        public InAppPurchaseV2 GetInAppPurchaseV2()
        {
            return (InAppPurchaseV2)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `PromotedPurchase`. If the actual instance is not `PromotedPurchase`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of PromotedPurchase</returns>
        public PromotedPurchase GetPromotedPurchase()
        {
            return (PromotedPurchase)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `AppEvent`. If the actual instance is not `AppEvent`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of AppEvent</returns>
        public AppEvent GetAppEvent()
        {
            return (AppEvent)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `ReviewSubmission`. If the actual instance is not `ReviewSubmission`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of ReviewSubmission</returns>
        public ReviewSubmission GetReviewSubmission()
        {
            return (ReviewSubmission)this.ActualInstance;
        }

        /// <summary>
        /// Get the actual instance of `SubscriptionGracePeriod`. If the actual instance is not `SubscriptionGracePeriod`,
        /// the InvalidClassException will be thrown
        /// </summary>
        /// <returns>An instance of SubscriptionGracePeriod</returns>
        public SubscriptionGracePeriod GetSubscriptionGracePeriod()
        {
            return (SubscriptionGracePeriod)this.ActualInstance;
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class AppsResponseIncludedInner {\n");
            sb.Append("  ActualInstance: ").Append(this.ActualInstance).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this.ActualInstance, AppsResponseIncludedInner.SerializerSettings);
        }

        /// <summary>
        /// Converts the JSON string into an instance of AppsResponseIncludedInner
        /// </summary>
        /// <param name="jsonString">JSON string</param>
        /// <returns>An instance of AppsResponseIncludedInner</returns>
        public static AppsResponseIncludedInner FromJson(string jsonString)
        {
            AppsResponseIncludedInner newAppsResponseIncludedInner = null;

            if (string.IsNullOrEmpty(jsonString))
            {
                return newAppsResponseIncludedInner;
            }
            int match = 0;
            List<string> matchedTypes = new List<string>();

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(AppClip).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppClip>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppClip>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("AppClip");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into AppClip: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(AppCustomProductPage).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppCustomProductPage>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppCustomProductPage>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("AppCustomProductPage");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into AppCustomProductPage: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(AppEvent).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppEvent>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppEvent>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("AppEvent");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into AppEvent: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(AppInfo).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppInfo>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppInfo>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("AppInfo");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into AppInfo: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(AppPreOrder).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppPreOrder>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppPreOrder>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("AppPreOrder");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into AppPreOrder: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(AppPrice).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppPrice>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppPrice>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("AppPrice");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into AppPrice: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(AppStoreVersion).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppStoreVersion>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<AppStoreVersion>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("AppStoreVersion");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into AppStoreVersion: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(BetaAppLocalization).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<BetaAppLocalization>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<BetaAppLocalization>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("BetaAppLocalization");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into BetaAppLocalization: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(BetaAppReviewDetail).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<BetaAppReviewDetail>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<BetaAppReviewDetail>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("BetaAppReviewDetail");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into BetaAppReviewDetail: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(BetaGroup).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<BetaGroup>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<BetaGroup>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("BetaGroup");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into BetaGroup: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(BetaLicenseAgreement).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<BetaLicenseAgreement>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<BetaLicenseAgreement>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("BetaLicenseAgreement");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into BetaLicenseAgreement: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(Build).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<Build>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<Build>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("Build");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into Build: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(CiProduct).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<CiProduct>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<CiProduct>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("CiProduct");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into CiProduct: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(EndUserLicenseAgreement).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<EndUserLicenseAgreement>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<EndUserLicenseAgreement>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("EndUserLicenseAgreement");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into EndUserLicenseAgreement: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(GameCenterEnabledVersion).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<GameCenterEnabledVersion>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<GameCenterEnabledVersion>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("GameCenterEnabledVersion");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into GameCenterEnabledVersion: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(InAppPurchase).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<InAppPurchase>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<InAppPurchase>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("InAppPurchase");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into InAppPurchase: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(InAppPurchaseV2).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<InAppPurchaseV2>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<InAppPurchaseV2>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("InAppPurchaseV2");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into InAppPurchaseV2: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(PrereleaseVersion).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<PrereleaseVersion>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<PrereleaseVersion>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("PrereleaseVersion");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into PrereleaseVersion: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(PromotedPurchase).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<PromotedPurchase>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<PromotedPurchase>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("PromotedPurchase");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into PromotedPurchase: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(ReviewSubmission).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<ReviewSubmission>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<ReviewSubmission>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("ReviewSubmission");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into ReviewSubmission: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(SubscriptionGracePeriod).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<SubscriptionGracePeriod>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<SubscriptionGracePeriod>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("SubscriptionGracePeriod");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into SubscriptionGracePeriod: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(SubscriptionGroup).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<SubscriptionGroup>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<SubscriptionGroup>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("SubscriptionGroup");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into SubscriptionGroup: {1}", jsonString, exception.ToString()));
            }

            try
            {
                // if it does not contains "AdditionalProperties", use SerializerSettings to deserialize
                if (typeof(Territory).GetProperty("AdditionalProperties") == null)
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<Territory>(jsonString, AppsResponseIncludedInner.SerializerSettings));
                }
                else
                {
                    newAppsResponseIncludedInner = new AppsResponseIncludedInner(JsonConvert.DeserializeObject<Territory>(jsonString, AppsResponseIncludedInner.AdditionalPropertiesSerializerSettings));
                }
                matchedTypes.Add("Territory");
                match++;
            }
            catch (Exception exception)
            {
                // deserialization failed, try the next one
                System.Diagnostics.Debug.WriteLine(string.Format("Failed to deserialize `{0}` into Territory: {1}", jsonString, exception.ToString()));
            }

            if (match == 0)
            {
                throw new InvalidDataException("The JSON string `" + jsonString + "` cannot be deserialized into any schema defined.");
            }
            else if (match > 1)
            {
                throw new InvalidDataException("The JSON string `" + jsonString + "` incorrectly matches more than one schema (should be exactly one match): " + matchedTypes);
            }

            // deserialization is considered successful at this point if no exception has been thrown.
            return newAppsResponseIncludedInner;
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AppsResponseIncludedInner);
        }

        /// <summary>
        /// Returns true if AppsResponseIncludedInner instances are equal
        /// </summary>
        /// <param name="input">Instance of AppsResponseIncludedInner to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppsResponseIncludedInner input)
        {
            if (input == null)
                return false;

            return this.ActualInstance.Equals(input.ActualInstance);
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActualInstance != null)
                    hashCode = hashCode * 59 + this.ActualInstance.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// Custom JSON converter for AppsResponseIncludedInner
    /// </summary>
    public class AppsResponseIncludedInnerJsonConverter : JsonConverter
    {
        /// <summary>
        /// To write the JSON string
        /// </summary>
        /// <param name="writer">JSON writer</param>
        /// <param name="value">Object to be converted into a JSON string</param>
        /// <param name="serializer">JSON Serializer</param>
        public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer)
        {
            writer.WriteRawValue((string)(typeof(AppsResponseIncludedInner).GetMethod("ToJson").Invoke(value, null)));
        }

        /// <summary>
        /// To convert a JSON string into an object
        /// </summary>
        /// <param name="reader">JSON reader</param>
        /// <param name="objectType">Object type</param>
        /// <param name="existingValue">Existing value</param>
        /// <param name="serializer">JSON Serializer</param>
        /// <returns>The object converted from the JSON string</returns>
        public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer)
        {
            if(reader.TokenType != JsonToken.Null)
            {
                return AppsResponseIncludedInner.FromJson(JObject.Load(reader).ToString(Formatting.None));
            }
            return null;
        }

        /// <summary>
        /// Check if the object can be converted
        /// </summary>
        /// <param name="objectType">Object type</param>
        /// <returns>True if the object can be converted</returns>
        public override bool CanConvert(Type objectType)
        {
            return false;
        }
    }

}
