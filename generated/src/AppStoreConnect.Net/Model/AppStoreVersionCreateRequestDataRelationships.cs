/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Model
{
    /// <summary>
    /// AppStoreVersionCreateRequestDataRelationships
    /// </summary>
    [DataContract(Name = "AppStoreVersionCreateRequest_data_relationships")]
    public partial class AppStoreVersionCreateRequestDataRelationships : IEquatable<AppStoreVersionCreateRequestDataRelationships>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppStoreVersionCreateRequestDataRelationships" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AppStoreVersionCreateRequestDataRelationships() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AppStoreVersionCreateRequestDataRelationships" /> class.
        /// </summary>
        /// <param name="app">app (required).</param>
        /// <param name="appStoreVersionLocalizations">appStoreVersionLocalizations.</param>
        /// <param name="build">build.</param>
        public AppStoreVersionCreateRequestDataRelationships(AppAvailabilityCreateRequestDataRelationshipsApp app = default(AppAvailabilityCreateRequestDataRelationshipsApp), AppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizations appStoreVersionLocalizations = default(AppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizations), AppStoreVersionCreateRequestDataRelationshipsBuild build = default(AppStoreVersionCreateRequestDataRelationshipsBuild))
        {
            // to ensure "app" is required (not null)
            if (app == null)
            {
                throw new ArgumentNullException("app is a required property for AppStoreVersionCreateRequestDataRelationships and cannot be null");
            }
            this.App = app;
            this.AppStoreVersionLocalizations = appStoreVersionLocalizations;
            this.Build = build;
        }

        /// <summary>
        /// Gets or Sets App
        /// </summary>
        [DataMember(Name = "app", IsRequired = true, EmitDefaultValue = true)]
        public AppAvailabilityCreateRequestDataRelationshipsApp App { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreVersionLocalizations
        /// </summary>
        [DataMember(Name = "appStoreVersionLocalizations", EmitDefaultValue = false)]
        public AppStoreVersionCreateRequestDataRelationshipsAppStoreVersionLocalizations AppStoreVersionLocalizations { get; set; }

        /// <summary>
        /// Gets or Sets Build
        /// </summary>
        [DataMember(Name = "build", EmitDefaultValue = false)]
        public AppStoreVersionCreateRequestDataRelationshipsBuild Build { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppStoreVersionCreateRequestDataRelationships {\n");
            sb.Append("  App: ").Append(App).Append("\n");
            sb.Append("  AppStoreVersionLocalizations: ").Append(AppStoreVersionLocalizations).Append("\n");
            sb.Append("  Build: ").Append(Build).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AppStoreVersionCreateRequestDataRelationships);
        }

        /// <summary>
        /// Returns true if AppStoreVersionCreateRequestDataRelationships instances are equal
        /// </summary>
        /// <param name="input">Instance of AppStoreVersionCreateRequestDataRelationships to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppStoreVersionCreateRequestDataRelationships input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.App == input.App ||
                    (this.App != null &&
                    this.App.Equals(input.App))
                ) && 
                (
                    this.AppStoreVersionLocalizations == input.AppStoreVersionLocalizations ||
                    (this.AppStoreVersionLocalizations != null &&
                    this.AppStoreVersionLocalizations.Equals(input.AppStoreVersionLocalizations))
                ) && 
                (
                    this.Build == input.Build ||
                    (this.Build != null &&
                    this.Build.Equals(input.Build))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.App != null)
                {
                    hashCode = (hashCode * 59) + this.App.GetHashCode();
                }
                if (this.AppStoreVersionLocalizations != null)
                {
                    hashCode = (hashCode * 59) + this.AppStoreVersionLocalizations.GetHashCode();
                }
                if (this.Build != null)
                {
                    hashCode = (hashCode * 59) + this.Build.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
