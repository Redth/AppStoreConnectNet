/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Model
{
    /// <summary>
    /// AppStoreVersionRelationships
    /// </summary>
    [DataContract(Name = "AppStoreVersion_relationships")]
    public partial class AppStoreVersionRelationships : IEquatable<AppStoreVersionRelationships>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppStoreVersionRelationships" /> class.
        /// </summary>
        /// <param name="app">app.</param>
        /// <param name="ageRatingDeclaration">ageRatingDeclaration.</param>
        /// <param name="appStoreVersionLocalizations">appStoreVersionLocalizations.</param>
        /// <param name="build">build.</param>
        /// <param name="appStoreVersionPhasedRelease">appStoreVersionPhasedRelease.</param>
        /// <param name="routingAppCoverage">routingAppCoverage.</param>
        /// <param name="appStoreReviewDetail">appStoreReviewDetail.</param>
        /// <param name="appStoreVersionSubmission">appStoreVersionSubmission.</param>
        /// <param name="appClipDefaultExperience">appClipDefaultExperience.</param>
        /// <param name="appStoreVersionExperiments">appStoreVersionExperiments.</param>
        public AppStoreVersionRelationships(AppAvailabilityRelationshipsApp app = default(AppAvailabilityRelationshipsApp), AppStoreVersionRelationshipsAgeRatingDeclaration ageRatingDeclaration = default(AppStoreVersionRelationshipsAgeRatingDeclaration), AppStoreVersionRelationshipsAppStoreVersionLocalizations appStoreVersionLocalizations = default(AppStoreVersionRelationshipsAppStoreVersionLocalizations), AppStoreVersionRelationshipsBuild build = default(AppStoreVersionRelationshipsBuild), AppStoreVersionRelationshipsAppStoreVersionPhasedRelease appStoreVersionPhasedRelease = default(AppStoreVersionRelationshipsAppStoreVersionPhasedRelease), AppStoreVersionRelationshipsRoutingAppCoverage routingAppCoverage = default(AppStoreVersionRelationshipsRoutingAppCoverage), AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail appStoreReviewDetail = default(AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail), AppStoreVersionRelationshipsAppStoreVersionSubmission appStoreVersionSubmission = default(AppStoreVersionRelationshipsAppStoreVersionSubmission), AppClipAppStoreReviewDetailRelationshipsAppClipDefaultExperience appClipDefaultExperience = default(AppClipAppStoreReviewDetailRelationshipsAppClipDefaultExperience), AppStoreVersionRelationshipsAppStoreVersionExperiments appStoreVersionExperiments = default(AppStoreVersionRelationshipsAppStoreVersionExperiments))
        {
            this.App = app;
            this.AgeRatingDeclaration = ageRatingDeclaration;
            this.AppStoreVersionLocalizations = appStoreVersionLocalizations;
            this.Build = build;
            this.AppStoreVersionPhasedRelease = appStoreVersionPhasedRelease;
            this.RoutingAppCoverage = routingAppCoverage;
            this.AppStoreReviewDetail = appStoreReviewDetail;
            this.AppStoreVersionSubmission = appStoreVersionSubmission;
            this.AppClipDefaultExperience = appClipDefaultExperience;
            this.AppStoreVersionExperiments = appStoreVersionExperiments;
        }

        /// <summary>
        /// Gets or Sets App
        /// </summary>
        [DataMember(Name = "app", EmitDefaultValue = false)]
        public AppAvailabilityRelationshipsApp App { get; set; }

        /// <summary>
        /// Gets or Sets AgeRatingDeclaration
        /// </summary>
        [DataMember(Name = "ageRatingDeclaration", EmitDefaultValue = false)]
        [Obsolete]
        public AppStoreVersionRelationshipsAgeRatingDeclaration AgeRatingDeclaration { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreVersionLocalizations
        /// </summary>
        [DataMember(Name = "appStoreVersionLocalizations", EmitDefaultValue = false)]
        public AppStoreVersionRelationshipsAppStoreVersionLocalizations AppStoreVersionLocalizations { get; set; }

        /// <summary>
        /// Gets or Sets Build
        /// </summary>
        [DataMember(Name = "build", EmitDefaultValue = false)]
        public AppStoreVersionRelationshipsBuild Build { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreVersionPhasedRelease
        /// </summary>
        [DataMember(Name = "appStoreVersionPhasedRelease", EmitDefaultValue = false)]
        public AppStoreVersionRelationshipsAppStoreVersionPhasedRelease AppStoreVersionPhasedRelease { get; set; }

        /// <summary>
        /// Gets or Sets RoutingAppCoverage
        /// </summary>
        [DataMember(Name = "routingAppCoverage", EmitDefaultValue = false)]
        public AppStoreVersionRelationshipsRoutingAppCoverage RoutingAppCoverage { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreReviewDetail
        /// </summary>
        [DataMember(Name = "appStoreReviewDetail", EmitDefaultValue = false)]
        public AppStoreReviewAttachmentRelationshipsAppStoreReviewDetail AppStoreReviewDetail { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreVersionSubmission
        /// </summary>
        [DataMember(Name = "appStoreVersionSubmission", EmitDefaultValue = false)]
        public AppStoreVersionRelationshipsAppStoreVersionSubmission AppStoreVersionSubmission { get; set; }

        /// <summary>
        /// Gets or Sets AppClipDefaultExperience
        /// </summary>
        [DataMember(Name = "appClipDefaultExperience", EmitDefaultValue = false)]
        public AppClipAppStoreReviewDetailRelationshipsAppClipDefaultExperience AppClipDefaultExperience { get; set; }

        /// <summary>
        /// Gets or Sets AppStoreVersionExperiments
        /// </summary>
        [DataMember(Name = "appStoreVersionExperiments", EmitDefaultValue = false)]
        public AppStoreVersionRelationshipsAppStoreVersionExperiments AppStoreVersionExperiments { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppStoreVersionRelationships {\n");
            sb.Append("  App: ").Append(App).Append("\n");
            sb.Append("  AgeRatingDeclaration: ").Append(AgeRatingDeclaration).Append("\n");
            sb.Append("  AppStoreVersionLocalizations: ").Append(AppStoreVersionLocalizations).Append("\n");
            sb.Append("  Build: ").Append(Build).Append("\n");
            sb.Append("  AppStoreVersionPhasedRelease: ").Append(AppStoreVersionPhasedRelease).Append("\n");
            sb.Append("  RoutingAppCoverage: ").Append(RoutingAppCoverage).Append("\n");
            sb.Append("  AppStoreReviewDetail: ").Append(AppStoreReviewDetail).Append("\n");
            sb.Append("  AppStoreVersionSubmission: ").Append(AppStoreVersionSubmission).Append("\n");
            sb.Append("  AppClipDefaultExperience: ").Append(AppClipDefaultExperience).Append("\n");
            sb.Append("  AppStoreVersionExperiments: ").Append(AppStoreVersionExperiments).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AppStoreVersionRelationships);
        }

        /// <summary>
        /// Returns true if AppStoreVersionRelationships instances are equal
        /// </summary>
        /// <param name="input">Instance of AppStoreVersionRelationships to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AppStoreVersionRelationships input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.App == input.App ||
                    (this.App != null &&
                    this.App.Equals(input.App))
                ) && 
                (
                    this.AgeRatingDeclaration == input.AgeRatingDeclaration ||
                    (this.AgeRatingDeclaration != null &&
                    this.AgeRatingDeclaration.Equals(input.AgeRatingDeclaration))
                ) && 
                (
                    this.AppStoreVersionLocalizations == input.AppStoreVersionLocalizations ||
                    (this.AppStoreVersionLocalizations != null &&
                    this.AppStoreVersionLocalizations.Equals(input.AppStoreVersionLocalizations))
                ) && 
                (
                    this.Build == input.Build ||
                    (this.Build != null &&
                    this.Build.Equals(input.Build))
                ) && 
                (
                    this.AppStoreVersionPhasedRelease == input.AppStoreVersionPhasedRelease ||
                    (this.AppStoreVersionPhasedRelease != null &&
                    this.AppStoreVersionPhasedRelease.Equals(input.AppStoreVersionPhasedRelease))
                ) && 
                (
                    this.RoutingAppCoverage == input.RoutingAppCoverage ||
                    (this.RoutingAppCoverage != null &&
                    this.RoutingAppCoverage.Equals(input.RoutingAppCoverage))
                ) && 
                (
                    this.AppStoreReviewDetail == input.AppStoreReviewDetail ||
                    (this.AppStoreReviewDetail != null &&
                    this.AppStoreReviewDetail.Equals(input.AppStoreReviewDetail))
                ) && 
                (
                    this.AppStoreVersionSubmission == input.AppStoreVersionSubmission ||
                    (this.AppStoreVersionSubmission != null &&
                    this.AppStoreVersionSubmission.Equals(input.AppStoreVersionSubmission))
                ) && 
                (
                    this.AppClipDefaultExperience == input.AppClipDefaultExperience ||
                    (this.AppClipDefaultExperience != null &&
                    this.AppClipDefaultExperience.Equals(input.AppClipDefaultExperience))
                ) && 
                (
                    this.AppStoreVersionExperiments == input.AppStoreVersionExperiments ||
                    (this.AppStoreVersionExperiments != null &&
                    this.AppStoreVersionExperiments.Equals(input.AppStoreVersionExperiments))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.App != null)
                {
                    hashCode = (hashCode * 59) + this.App.GetHashCode();
                }
                if (this.AgeRatingDeclaration != null)
                {
                    hashCode = (hashCode * 59) + this.AgeRatingDeclaration.GetHashCode();
                }
                if (this.AppStoreVersionLocalizations != null)
                {
                    hashCode = (hashCode * 59) + this.AppStoreVersionLocalizations.GetHashCode();
                }
                if (this.Build != null)
                {
                    hashCode = (hashCode * 59) + this.Build.GetHashCode();
                }
                if (this.AppStoreVersionPhasedRelease != null)
                {
                    hashCode = (hashCode * 59) + this.AppStoreVersionPhasedRelease.GetHashCode();
                }
                if (this.RoutingAppCoverage != null)
                {
                    hashCode = (hashCode * 59) + this.RoutingAppCoverage.GetHashCode();
                }
                if (this.AppStoreReviewDetail != null)
                {
                    hashCode = (hashCode * 59) + this.AppStoreReviewDetail.GetHashCode();
                }
                if (this.AppStoreVersionSubmission != null)
                {
                    hashCode = (hashCode * 59) + this.AppStoreVersionSubmission.GetHashCode();
                }
                if (this.AppClipDefaultExperience != null)
                {
                    hashCode = (hashCode * 59) + this.AppClipDefaultExperience.GetHashCode();
                }
                if (this.AppStoreVersionExperiments != null)
                {
                    hashCode = (hashCode * 59) + this.AppStoreVersionExperiments.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
