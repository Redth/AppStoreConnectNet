/*
 * App Store Connect API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = AppStoreConnect.Client.FileParameter;
using OpenAPIDateConverter = AppStoreConnect.Client.OpenAPIDateConverter;

namespace AppStoreConnect.Model
{
    /// <summary>
    /// BetaTesterRelationships
    /// </summary>
    [DataContract(Name = "BetaTester_relationships")]
    public partial class BetaTesterRelationships : IEquatable<BetaTesterRelationships>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BetaTesterRelationships" /> class.
        /// </summary>
        /// <param name="apps">apps.</param>
        /// <param name="betaGroups">betaGroups.</param>
        /// <param name="builds">builds.</param>
        public BetaTesterRelationships(BetaTesterRelationshipsApps apps = default(BetaTesterRelationshipsApps), AppRelationshipsBetaGroups betaGroups = default(AppRelationshipsBetaGroups), AppEncryptionDeclarationRelationshipsBuilds builds = default(AppEncryptionDeclarationRelationshipsBuilds))
        {
            this.Apps = apps;
            this.BetaGroups = betaGroups;
            this.Builds = builds;
        }

        /// <summary>
        /// Gets or Sets Apps
        /// </summary>
        [DataMember(Name = "apps", EmitDefaultValue = false)]
        public BetaTesterRelationshipsApps Apps { get; set; }

        /// <summary>
        /// Gets or Sets BetaGroups
        /// </summary>
        [DataMember(Name = "betaGroups", EmitDefaultValue = false)]
        public AppRelationshipsBetaGroups BetaGroups { get; set; }

        /// <summary>
        /// Gets or Sets Builds
        /// </summary>
        [DataMember(Name = "builds", EmitDefaultValue = false)]
        public AppEncryptionDeclarationRelationshipsBuilds Builds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BetaTesterRelationships {\n");
            sb.Append("  Apps: ").Append(Apps).Append("\n");
            sb.Append("  BetaGroups: ").Append(BetaGroups).Append("\n");
            sb.Append("  Builds: ").Append(Builds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BetaTesterRelationships);
        }

        /// <summary>
        /// Returns true if BetaTesterRelationships instances are equal
        /// </summary>
        /// <param name="input">Instance of BetaTesterRelationships to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BetaTesterRelationships input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Apps == input.Apps ||
                    (this.Apps != null &&
                    this.Apps.Equals(input.Apps))
                ) && 
                (
                    this.BetaGroups == input.BetaGroups ||
                    (this.BetaGroups != null &&
                    this.BetaGroups.Equals(input.BetaGroups))
                ) && 
                (
                    this.Builds == input.Builds ||
                    (this.Builds != null &&
                    this.Builds.Equals(input.Builds))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Apps != null)
                {
                    hashCode = (hashCode * 59) + this.Apps.GetHashCode();
                }
                if (this.BetaGroups != null)
                {
                    hashCode = (hashCode * 59) + this.BetaGroups.GetHashCode();
                }
                if (this.Builds != null)
                {
                    hashCode = (hashCode * 59) + this.Builds.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
